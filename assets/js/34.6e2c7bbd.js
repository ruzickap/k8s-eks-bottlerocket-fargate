(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{323:function(s,a,t){"use strict";t.r(a);var e=t(8),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"gitops-tools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitops-tools"}},[s._v("#")]),s._v(" GitOps tools")]),s._v(" "),a("h2",{attrs:{id:"argocd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#argocd"}},[s._v("#")]),s._v(" ArgoCD")]),s._v(" "),a("p",[s._v("Set the "),a("code",[s._v("ARGOCD_ADMIN_PASSWORD")]),s._v(" with password:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ARGOCD_ADMIN_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("htpasswd "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-nbBC")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MY_PASSWORD}")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('":'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/\\'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2y")]),s._v("/\\"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2a")]),s._v('/"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),a("p",[s._v("Install "),a("code",[s._v("argo-cd")]),s._v(" "),a("a",{attrs:{href:"https://artifacthub.io/packages/helm/argo/argo-cd",target:"_blank",rel:"noopener noreferrer"}},[s._v("helm chart"),a("OutboundLink")],1),s._v("\nand modify the\n"),a("a",{attrs:{href:"https://github.com/argoproj/argo-helm/blob/master/charts/argo-cd/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[s._v("default values"),a("OutboundLink")],1),s._v(".")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("helm repo "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" --force-update argo https://argoproj.github.io/argo-helm\nhelm upgrade "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--version")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.12")]),s._v(".1 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--namespace")]),s._v(" argocd --create-namespace "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--values")]),s._v(" - argocd argo/argo-cd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\ncontroller:\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\ndex:\n  enabled: false\nserver:\n  extraArgs:\n    - --insecure\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: false\n  ingress:\n    enabled: true\n    hosts:\n      - argocd."),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v("\n    tls:\n      - secretName: ingress-cert-"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LETSENCRYPT_ENVIRONMENT}")]),s._v("\n        hosts:\n          - argocd."),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v("\n  config:\n    url: https://argocd."),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v("\n    # OIDC does not work for self signed certs: https://github.com/argoproj/argo-cd/issues/4344\n    oidc.config: |\n      name: Dex\n      issuer: https://dex."),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v("\n      clientID: argocd."),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v("\n      clientSecret: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MY_PASSWORD}")]),s._v("\n      requestedIDTokenClaims:\n        groups:\n          essential: true\n      requestedScopes:\n        - openid\n        - profile\n        - email\n  rbacConfig:\n    policy.default: role:admin\nrepoServer:\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\nconfigs:\n  secret:\n    argocdServerAdminPassword: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${ARGOCD_ADMIN_PASSWORD}")]),s._v("\nEOF")]),s._v("\n")])])]),a("p",[s._v("Output:")]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('"argo" has been added to your repositories\nmanifest_sorter.go:192: info: skipping unknown hook: "crd-install"\nmanifest_sorter.go:192: info: skipping unknown hook: "crd-install"\nNAME: argocd\nLAST DEPLOYED: Thu Dec 10 16:02:58 2020\nNAMESPACE: argocd\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nIn order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `service.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/ingress.md#option-1-ssl-passthrough\n      - Add the `--insecure` flag to `server.extraArgs` in the values file and terminate SSL at your ingress: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/ingress.md#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the password will be the\nname of the server pod. You can get the pod name by running:\n\nkubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server -o name | cut -d\'/\' -f 2\n')])])]),a("h2",{attrs:{id:"flux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flux"}},[s._v("#")]),s._v(" Flux")]),s._v(" "),a("p",[s._v("Handy repositories:")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/kingdonb/kccnceu2021",target:"_blank",rel:"noopener noreferrer"}},[s._v("Helm Users! What Flux 2 Can Do For You"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/fluxcd/flux2-multi-tenancy",target:"_blank",rel:"noopener noreferrer"}},[s._v("flux2-multi-tenancy"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/relu/flux-demo",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/relu/flux-demo"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("Make sure you have the "),a("code",[s._v("GITHUB_TOKEN")]),s._v(" configured properly.")]),s._v(" "),a("p",[s._v("Install Flux on a Kubernetes cluster and configure it to manage itself from\na Git repository:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("flux bootstrap github "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--personal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--owner")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MY_GITHUB_USERNAME}")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--repository")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_NAME}")]),s._v('-k8s-clusters"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--branch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("master\n")])])]),a("p",[s._v("Output:")]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('► connecting to github.com\n✔ repository "https://github.com/ruzickap/kube1-k8s-clusters" created\n► cloning branch "master" from Git repository "https://github.com/ruzickap/kube1-k8s-clusters.git"\n✔ cloned repository\n► generating component manifests\n✔ generated component manifests\n✔ committed sync manifests to "master" ("14d6ae5fca7dc2edceaa224958ecf6876d4307af")\n► pushing component manifests to "https://github.com/ruzickap/kube1-k8s-clusters.git"\n✔ installed components\n✔ reconciled components\n► determining if source secret "flux-system/flux-system" exists\n► generating source secret\n✔ public key: ecdsa-sha2-nistp384 AAAAE2VjZHNhLXNoYTItbmlzdHAzODQAAAAIbmlzdHAzODQAAABhBChRlBEwVkTuaBocgPHeCLvRIG8hjfC91/VUVmKqiIGoj69lW09r8kC+TIi5TSKRq/A3Pl2PNxc/tnI4T2EMn7QPSs6wJYrcMP4DMs/BUKLFKASSDz5ovcX+8JPhHYvfWw==\n✔ configured deploy key "flux-system-master-flux-system-./clusters/kube1.k8s.mylabs.dev" for "https://github.com/ruzickap/kube1-k8s-clusters"\n► applying source secret "flux-system/flux-system"\n✔ reconciled source secret\n► generating sync manifests\n✔ generated sync manifests\n✔ committed sync manifests to "master" ("32b36ef8b2b80c8fb97ca5fb7edf5ffd5c7bab4c")\n► pushing sync manifests to "https://github.com/ruzickap/kube1-k8s-clusters.git"\n► applying sync manifests\n✔ reconciled sync configuration\n◎ waiting for Kustomization "flux-system/flux-system" to be reconciled\n✔ Kustomization reconciled successfully\n► confirming components are healthy\n✔ helm-controller: deployment ready\n✔ kustomize-controller: deployment ready\n✔ notification-controller: deployment ready\n✔ source-controller: deployment ready\n✔ all components are healthy\n')])])]),a("p",[s._v("Create GPG key in "),a("code",[s._v("tmp/${CLUSTER_FQDN}/.gnupg")]),s._v(" directory:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GNUPGHOME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PWD")]),s._v("}")]),s._v("/tmp/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/.gnupg"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-vp")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${GNUPGHOME}")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" 0700 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${GNUPGHOME}")]),s._v('"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${GNUPGHOME}")]),s._v('/my_gpg_key"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\nKey-Type: RSA\nKey-Length: 4096\nSubkey-Type: RSA\nSubkey-Length: 4096\nName-Comment: Flux secrets\nName-Real: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v("\nName-Email: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MY_EMAIL}")]),s._v("\nExpire-Date: 0\n%no-protection\n%commit\nEOF")]),s._v("\n\ngpg "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--verbose")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--batch")]),s._v(" --gen-key "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${GNUPGHOME}")]),s._v('/my_gpg_key"')]),s._v("\n")])])]),a("p",[s._v("Output")]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mkdir: created directory '/Users/ruzickap/git/k8s-eks-bottlerocket-fargate/tmp/kube1.k8s.mylabs.dev/.gnupg'\ngpg: Note: RFC4880bis features are enabled.\ngpg: keybox '/Users/ruzickap/git/k8s-eks-bottlerocket-fargate/tmp/kube1.k8s.mylabs.dev/.gnupg/pubring.kbx' created\ngpg: no running gpg-agent - starting '/usr/local/Cellar/gnupg/2.3.3_1/bin/gpg-agent'\ngpg: waiting for the agent to come up ... (5s)\ngpg: connection to the agent established\ngpg: writing self signature\ngpg: RSA/SHA256 signature from: \"D2FAC1BD98CDE147 [?]\"\ngpg: writing key binding signature\ngpg: RSA/SHA256 signature from: \"D2FAC1BD98CDE147 [?]\"\ngpg: RSA/SHA256 signature from: \"6259C1389B0D69B6 [?]\"\ngpg: writing public key to '/Users/ruzickap/git/k8s-eks-bottlerocket-fargate/tmp/kube1.k8s.mylabs.dev/.gnupg/pubring.kbx'\ngpg: /Users/ruzickap/git/k8s-eks-bottlerocket-fargate/tmp/kube1.k8s.mylabs.dev/.gnupg/trustdb.gpg: trustdb created\ngpg: using pgp trust model\ngpg: key D2FAC1BD98CDE147 marked as ultimately trusted\ngpg: directory '/Users/ruzickap/git/k8s-eks-bottlerocket-fargate/tmp/kube1.k8s.mylabs.dev/.gnupg/openpgp-revocs.d' created\ngpg: writing to '/Users/ruzickap/git/k8s-eks-bottlerocket-fargate/tmp/kube1.k8s.mylabs.dev/.gnupg/openpgp-revocs.d/8407817AB5F5627156F3EDA5D2FAC1BD98CDE147.rev'\ngpg: RSA/SHA256 signature from: \"D2FAC1BD98CDE147 kube1.k8s.mylabs.dev (Flux secrets) &lt;petr.ruzicka@gmail.com>\"\ngpg: revocation certificate stored as '/Users/ruzickap/git/k8s-eks-bottlerocket-fargate/tmp/kube1.k8s.mylabs.dev/.gnupg/openpgp-revocs.d/8407817AB5F5627156F3EDA5D2FAC1BD98CDE147.rev'\n")])])]),a("p",[s._v("Store the key fingerprint as an environment variable:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KEY_FP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("gpg --list-secret-keys --with-colons "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"NR == 2 { print \\'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$10")]),s._v(' }"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" KEY_FP\n")])])]),a("p",[s._v("Output:")]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("gpg: checking the trustdb\ngpg: marginals needed: 3  completes needed: 1  trust model: pgp\ngpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u\n")])])]),a("p",[s._v("Export the public and private keypair from your local GPG keyring and create\na Kubernetes secret named "),a("code",[s._v("sops-gpg")]),s._v(" in the "),a("code",[s._v("flux-system")]),s._v(" namespace:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("gpg --export-secret-keys "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--armor")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${KEY_FP}")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n  kubectl create secret generic sops-gpg "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--namespace")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("flux-system --from-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sops.asc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dev/stdin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --save-config --dry-run"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("client "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n  kubectl apply "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" -\n")])])]),a("p",[s._v("Configure Git:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-q")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"github.com"')]),s._v(" ~/.ssh/known_hosts "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" ssh-keyscan github.com "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ~/.ssh/known_hosts "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" /dev/null\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/.gitconfig "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MY_EMAIL}")]),s._v('"')]),s._v("\n")])])]),a("p",[s._v("Clone git repository created by flux:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tmp/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_NAME}")]),s._v('-k8s-clusters"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--quiet")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${GITHUB_TOKEN}")]),s._v("@github.com/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MY_GITHUB_USERNAME}")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_NAME}")]),s._v('-k8s-clusters.git"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tmp/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_NAME}")]),s._v('-k8s-clusters"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tmp/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_NAME}")]),s._v('-k8s-clusters"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n")])])]),a("p",[s._v("Export the public key into the Git directory")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("gpg "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--armor")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${KEY_FP}")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/.sops.pub.asc"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/.sops.pub.asc"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Share GPG public key for secrets generation"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])])]),a("p",[s._v("Configure the Git directory for encryption:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/.sops.yaml"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\ncreation_rules:\n  - path_regex: .*.yaml\n    encrypted_regex: ^(data|stringData)$\n    pgp: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${KEY_FP}")]),s._v("\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/.sops.yaml"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Configure the Git directory for encryption"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])])]),a("h3",{attrs:{id:"helmrepository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#helmrepository"}},[s._v("#")]),s._v(" HelmRepository")]),s._v(" "),a("p",[s._v('HelmRepository definitions should be separated from the applications.\nThe main reason is it\'s definition in HelmRelease depends on\n"namespace". When '),a("code",[s._v("HelmRepository")]),s._v(" is separated, then you can easily change\nnamespace for whole application / "),a("code",[s._v("HelmRelease")]),s._v(", because the "),a("code",[s._v("HelmRepository")]),s._v("\nwill always be in the "),a("code",[s._v("flux-system")]),s._v(" namespace.")]),s._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" HelmRelease\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("sourceRef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" HelmRepository\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" podinfo\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" flux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("system\n")])])]),a("p",[s._v("Create "),a("code",[s._v("HelmRepository")]),s._v(" resource files:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-pv")]),s._v(" apps/base/helmrepository\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/helmrepository/podinfo.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: source.toolkit.fluxcd.io/v1beta1\nkind: HelmRepository\nmetadata:\n  name: podinfo\nspec:\n  interval: 1h\n  url: https://stefanprodan.github.io/podinfo\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/helmrepository/bitnami.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: source.toolkit.fluxcd.io/v1beta1\nkind: HelmRepository\nmetadata:\n  name: bitnami\nspec:\n  interval: 1h\n  url: https://charts.bitnami.com/bitnami\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/helmrepository/kustomization.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nnamespace: flux-system\nresources:\n  - podinfo.yaml\n  - bitnami.yaml\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" apps/base/helmrepository\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add HelmRepository files"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])])]),a("h3",{attrs:{id:"application-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-configuration"}},[s._v("#")]),s._v(" Application configuration")]),s._v(" "),a("h4",{attrs:{id:"flux-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flux-configuration"}},[s._v("#")]),s._v(" Flux configuration")]),s._v(" "),a("p",[s._v("Create Flux configuration for Slack notification + Prometheus monitoring.")]),s._v(" "),a("p",[s._v("Providers needs to be configured/installed before the alerts - that is the\nreason why I'm doing the "),a("code",[s._v("Kustomization")]),s._v(" which contains "),a("code",[s._v("dependsOn")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-pv")]),s._v(" apps/base/flux/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("providers,alerts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/flux/providers/provider-slack.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: notification.toolkit.fluxcd.io/v1beta1\nkind: Provider\nmetadata:\n  name: slack\n  namespace: flux-system\nspec:\n  type: slack\n  channel: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${slack_channel}")]),s._v("\n  secretRef:\n    name: slack-url\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/flux/providers/kustomization.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nnamespace: flux-system\nresources:\n  - provider-slack.yaml\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/flux/providers.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\napiVersion: kustomize.toolkit.fluxcd.io/v1beta1\nkind: Kustomization\nmetadata:\n  name: providers\n  namespace: flux-system\nspec:\n  interval: 1m\n  prune: true\n  sourceRef:\n    kind: GitRepository\n    name: flux-system\n  path: ./apps/base/flux/providers/\n  postBuild:\n    substitute:\n      slack_channel: general\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/flux/alerts/alert-slack.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: notification.toolkit.fluxcd.io/v1beta1\nkind: Alert\nmetadata:\n  name: slack\n  namespace: flux-system\nspec:\n  providerRef:\n    name: slack\n  eventSeverity: error\n  eventSources:\n    - kind: GitRepository\n      name: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\n    - kind: Kustomization\n      name: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\n    - kind: HelmRepository\n      name: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\n    - kind: HelmChart\n      name: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\n    - kind: HelmRelease\n      name: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/flux/alerts/kustomization.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nnamespace: flux-system\nresources:\n  - alert-slack.yaml\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/flux/alerts.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\napiVersion: kustomize.toolkit.fluxcd.io/v1beta1\nkind: Kustomization\nmetadata:\n  name: alerts\n  namespace: flux-system\nspec:\n  dependsOn:\n    - name: providers\n  interval: 1m\n  prune: true\n  sourceRef:\n    kind: GitRepository\n    name: flux-system\n  path: ./apps/base/flux/alerts/\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/flux/monitoring.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: monitoring.coreos.com/v1\nkind: PodMonitor\nmetadata:\n  name: source-controller\n  namespace: flux-system\nspec:\n  namespaceSelector:\n    matchNames:\n      - flux-system\n  selector:\n    matchLabels:\n      app: source-controller\n  podMetricsEndpoints:\n  - port: http-prom\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/flux/github-receiver.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: notification.toolkit.fluxcd.io/v1beta1\nkind: Receiver\nmetadata:\n  name: github-receiver\n  namespace: flux-system\nspec:\n  type: github\n  events:\n    - "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ping"')]),s._v("\n    - "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"push"')]),s._v("\n  secretRef:\n    name: github-webhook-token\n  resources:\n    - kind: GitRepository\n      name: flux-system\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: flux-receiver\n  namespace: flux-system\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/flux/kustomization.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nnamespace: flux-system\nresources:\n  - alerts.yaml\n  - github-receiver.yaml\n  - monitoring.yaml\n  - providers.yaml\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" apps/base/flux\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add podmonitor and configure slack notifications for flux"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])])]),a("h4",{attrs:{id:"podinfo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#podinfo"}},[s._v("#")]),s._v(" podinfo")]),s._v(" "),a("p",[s._v("Add podinfo:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-pv")]),s._v(" apps/base/podinfo\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/podinfo/namespace.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: podinfo\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/podinfo/helmrelease.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# https://github.com/stefanprodan/podinfo/blob/master/charts/podinfo/values.yaml")]),s._v("\napiVersion: helm.toolkit.fluxcd.io/v2beta1\nkind: HelmRelease\nmetadata:\n  name: podinfo\n  namespace: podinfo\nspec:\n  interval: 1m\n  chart:\n    spec:\n      chart: podinfo\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Version can be overwritten by values specified in apps/{dev,stage,prod}/podinfo-values.yaml")]),s._v("\n      version: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.2")]),s._v(".0\n      sourceRef:\n        kind: HelmRepository\n        name: podinfo\n        namespace: flux-system\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/podinfo/kustomization.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n  - namespace.yaml\n  - helmrelease.yaml\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" apps/base/podinfo\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add podinfo"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])])]),a("h4",{attrs:{id:"wordpress"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wordpress"}},[s._v("#")]),s._v(" WordPress")]),s._v(" "),a("p",[s._v("Add WordPress:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-pv")]),s._v(" apps/base/wordpress\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/wordpress/helmrelease.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# https://github.com/bitnami/charts/blob/master/bitnami/wordpress/values.yaml")]),s._v("\napiVersion: helm.toolkit.fluxcd.io/v2beta1\nkind: HelmRelease\nmetadata:\n  name: wordpress\n  namespace: wordpress\nspec:\n  interval: 1m\n  chart:\n    spec:\n      chart: wordpress\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Version should be overwritten ba values specified in apps/{dev,stage,prod}/wordpress-values.yaml")]),s._v("\n      version: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.8")]),s._v(".0\n      sourceRef:\n        kind: HelmRepository\n        name: bitnami\n        namespace: flux-system\n  values:\n    wordpressSkipInstall: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n    service:\n      type: ClusterIP\n    persistence:\n      enabled: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n    metrics:\n      enabled: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    serviceMonitor:\n      enabled: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    mariadb:\n      primary:\n        persistence:\n          enabled: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/base/wordpress/kustomization.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n  - helmrelease.yaml\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" apps/base/wordpress\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add wordpress"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])])]),a("h3",{attrs:{id:"dev-group-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dev-group-configuration"}},[s._v("#")]),s._v(" Dev group configuration")]),s._v(" "),a("p",[s._v("Add group of applications which belongs to "),a("code",[s._v("dev")]),s._v(" group of K8s clusters:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-pv")]),s._v(" apps/dev/helmrepository\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/dev/helmrepository/kustomization.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n  - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/base/helmrepository\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/dev/kustomization.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n  - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/base/flux\n  - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/base/podinfo\n  - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/base/wordpress\npatchesStrategicMerge:\n  - flux-values.yaml\n  - podinfo-values.yaml\n  - wordpress-values.yaml\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/dev/flux-values.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: kustomize.toolkit.fluxcd.io/v1beta1\nkind: Kustomization\nmetadata:\n  name: providers\n  namespace: flux-system\nspec:\n  postBuild:\n    substitute:\n      slack_channel: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${slack_channel}")]),s._v("\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: flux-receiver\n  namespace: flux-system\nspec:\n  rules:\n  - host: flux-receiver."),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${cluster_fqdn}")]),s._v("\n    http:\n      paths:\n      - path: /\n        pathType: ImplementationSpecific\n        backend:\n          service:\n            name: webhook-receiver\n            port:\n              name: http\n  tls:\n  - hosts:\n    - flux-receiver."),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${cluster_fqdn}")]),s._v("\n    secretName: flux-receiver."),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${cluster_fqdn}")]),s._v("\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/dev/podinfo-values.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# https://github.com/stefanprodan/podinfo/blob/master/charts/podinfo/values.yaml")]),s._v("\napiVersion: helm.toolkit.fluxcd.io/v2beta1\nkind: HelmRelease\nmetadata:\n  name: podinfo\n  namespace: podinfo\nspec:\n  chart:\n    spec:\n      version: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.1")]),s._v(".0\n  values:\n    serviceMonitor:\n      enabled: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    ui:\n      color: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#577c34"')]),s._v("\n      message: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Environment: dev | Hostname: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${podinfo_hostname}")]),s._v(" | Certificate: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${letsencrypt_environment"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v("staging}")]),s._v('"')]),s._v("\n    ingress:\n      enabled: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n      path: /\n      hosts:\n      - "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${podinfo_hostname}")]),s._v("\n      tls:\n      - secretName: ingress-cert-"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${letsencrypt_environment"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v("staging}")]),s._v("\n        hosts:\n        - "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${podinfo_hostname}")]),s._v("\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" apps/dev/wordpress-values.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# https://github.com/bitnami/charts/blob/master/bitnami/wordpress/values.yaml")]),s._v("\napiVersion: helm.toolkit.fluxcd.io/v2beta1\nkind: HelmRelease\nmetadata:\n  name: wordpress\n  namespace: wordpress\nspec:\n  chart:\n    spec:\n      version: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.7")]),s._v(".0\n  values:\n    wordpressUsername: admin\n    existingSecret: wordpress-password\n    wordpressEmail: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${wordpress_email}")]),s._v("\n    ingress:\n      enabled: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n      hostname: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${wordpress_hostname}")]),s._v("\n      annotations:\n        nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy."),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${cluster_fqdn}")]),s._v("/oauth2/auth\n        nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy."),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${cluster_fqdn}")]),s._v("/oauth2/start?rd"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$scheme")]),s._v("://"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$request_uri")]),s._v("\n      extraTls:\n      - hosts:\n          - "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${wordpress_hostname}")]),s._v("\n        secretName: ingress-cert-"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${letsencrypt_environment"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v("staging}")]),s._v("\n    mariadb:\n      auth:\n        existingSecret: mariadb-auth-secret\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" apps/dev\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add dev group"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])])]),a("h3",{attrs:{id:"cluster-apps-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cluster-apps-configuration"}},[s._v("#")]),s._v(" Cluster apps configuration")]),s._v(" "),a("p",[s._v("Configure cluster applications and their variables:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local.yaml"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\napiVersion: kustomize.toolkit.fluxcd.io/v1beta1\nkind: Kustomization\nmetadata:\n  name: local\n  namespace: flux-system\nspec:\n  decryption:\n    provider: sops\n    secretRef:\n      name: sops-gpg\n  interval: 10m\n  path: ./clusters/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v("/local\n  prune: true\n  sourceRef:\n    kind: GitRepository\n    name: flux-system\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This customization is needed to force flux to work with specific")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# files/directories and not go to "unwanted" directories')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (like local without proper SOPS confoguration)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/kustomization.yaml"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n- flux-system\n- local.yaml\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-pv")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local/helmrepository.yaml"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\napiVersion: kustomize.toolkit.fluxcd.io/v1beta1\nkind: Kustomization\nmetadata:\n  name: helmrepository-dev\n  namespace: flux-system\nspec:\n  interval: 1m\n  prune: true\n  sourceRef:\n    kind: GitRepository\n    name: flux-system\n  validation: client\n  path: ./apps/dev/helmrepository\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local/apps.yaml"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\napiVersion: kustomize.toolkit.fluxcd.io/v1beta1\nkind: Kustomization\nmetadata:\n  name: apps\n  namespace: flux-system\nspec:\n  dependsOn:\n    - name: helmrepository-dev\n  interval: 1m\n  prune: true\n  sourceRef:\n    kind: GitRepository\n    name: flux-system\n  validation: client\n  path: ./apps/dev\n  postBuild:\n    substitute:\n      cluster_fqdn: "'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('"\n      letsencrypt_environment: "'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LETSENCRYPT_ENVIRONMENT}")]),s._v('"\n      podinfo_hostname: flux-dev-podinfo.'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v("\n      slack_channel: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${SLACK_CHANNEL}")]),s._v("\n      wordpress_email: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MY_EMAIL}")]),s._v("\n      wordpress_hostname: flux-dev-wordpress."),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v("\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Namespaces needs to be created before the flux+sops will decrypt the secrets")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# `secret-wordpress-password.yaml` into it")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local/namespace-wordpress.yaml"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("EOF\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: wordpress\nEOF\n\nkubectl create secret generic wordpress-password "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--namespace")]),s._v(" wordpress --from-literal"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("wordpress-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MY_PASSWORD}")]),s._v('"')]),s._v(" --dry-run"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("client "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local/secret-wordpress-password.yaml"')]),s._v("\nsops "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--encrypt")]),s._v(" --in-place "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--config")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/.sops.yaml"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local/secret-wordpress-password.yaml"')]),s._v("\n\nkubectl create secret generic mariadb-auth-secret "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--namespace")]),s._v(" wordpress --from-literal"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mariadb-root-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MY_PASSWORD}")]),s._v('"')]),s._v(" --from-literal"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mariadb-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MY_PASSWORD}")]),s._v('"')]),s._v(" --dry-run"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("client "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local/secret-mariadb-auth.yaml"')]),s._v("\nsops "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--encrypt")]),s._v(" --in-place "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--config")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/.sops.yaml"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local/secret-mariadb-auth.yaml"')]),s._v("\n\nkubectl "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" flux-system create secret generic slack-url --from-literal"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("address"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${SLACK_INCOMING_WEBHOOK_URL}")]),s._v('"')]),s._v(" --dry-run"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("client "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local/secret-slack-url.yaml"')]),s._v("\nsops "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--encrypt")]),s._v(" --in-place "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--config")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/.sops.yaml"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local/secret-slack-url.yaml"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GITHUB_WEBHOOK_SECRET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" /dev/urandom "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" shasum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\nkubectl "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" flux-system create secret generic github-webhook-token --from-literal"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("token"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${GITHUB_WEBHOOK_SECRET}")]),s._v('"')]),s._v(" --dry-run"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("client "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local/secret-github-webhook-token.yaml"')]),s._v("\nsops "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--encrypt")]),s._v(" --in-place "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--config")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/.sops.yaml"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local/secret-github-webhook-token.yaml"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('/local/kustomization.yaml"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n- apps.yaml\n- helmrepository.yaml\n- namespace-wordpress.yaml\n- secret-mariadb-auth.yaml\n- secret-slack-url.yaml\n- secret-github-webhook-token.yaml\n- secret-wordpress-password.yaml\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clusters/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),s._v('"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Configure cluster applications"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" flux reconcile "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" flux-system\n")])])]),a("p",[s._v("Output:")]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[master 1546a95] Configure cluster applications\n 10 files changed, 232 insertions(+)\n create mode 100644 clusters/kube1.k8s.mylabs.dev/kustomization.yaml\n create mode 100644 clusters/kube1.k8s.mylabs.dev/local.yaml\n create mode 100644 clusters/kube1.k8s.mylabs.dev/local/apps.yaml\n create mode 100644 clusters/kube1.k8s.mylabs.dev/local/helmrepository.yaml\n create mode 100644 clusters/kube1.k8s.mylabs.dev/local/kustomization.yaml\n create mode 100644 clusters/kube1.k8s.mylabs.dev/local/namespace-wordpress.yaml\n create mode 100644 clusters/kube1.k8s.mylabs.dev/local/secret-github-webhook-token.yaml\n create mode 100644 clusters/kube1.k8s.mylabs.dev/local/secret-mariadb-auth.yaml\n create mode 100644 clusters/kube1.k8s.mylabs.dev/local/secret-slack-url.yaml\n create mode 100644 clusters/kube1.k8s.mylabs.dev/local/secret-wordpress-password.yaml\nEnumerating objects: 77, done.\nCounting objects: 100% (77/77), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (63/63), done.\nWriting objects: 100% (74/74), 16.79 KiB | 781.00 KiB/s, done.\nTotal 74 (delta 13), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (13/13), done.\nTo https://github.com/ruzickap/kube1-k8s-clusters.git\n   32b36ef..1546a95  master -> master\n► annotating GitRepository flux-system in flux-system namespace\n✔ GitRepository annotated\n◎ waiting for GitRepository reconciliation\n✔ fetched revision master/1546a9590214db9fea0ed9e033d98f6ef8966798\n")])])]),a("p",[s._v("Configure GitHub Webhook:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FLUX_RECEIVER_URL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("kubectl "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" flux-system get receiver github-receiver "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("jsonpath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{.status.url}"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Authorization: token '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITHUB_TOKEN")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-X")]),s._v(" POST "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{'),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("active"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": true, "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("events"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": ["),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("push"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("], "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("config"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": {"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("url"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("https://flux-receiver."),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_FQDN}")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${FLUX_RECEIVER_URL}")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("content_type"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("json"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("secret"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${GITHUB_WEBHOOK_SECRET}")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("insecure_ssl"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("1"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('}}"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://api.github.com/repos/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MY_GITHUB_USERNAME}")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CLUSTER_NAME}")]),s._v('-k8s-clusters/hooks"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq\n")])])]),a("p",[s._v("Output:")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Repository"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("330855597")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"web"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"active"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"events"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"push"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"config"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"content_type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"insecure_ssl"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"secret"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://flux-receiver.kube1.k8s.mylabs.dev/hook/42efc6e2c884da9a1d63a24a75a4147f3291935455523b4cb5d2857fba62c09e"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"updated_at"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2021-11-29T18:40:43Z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"created_at"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2021-11-29T18:40:43Z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://api.github.com/repos/ruzickap/kube1-k8s-clusters/hooks/330855597"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"test_url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://api.github.com/repos/ruzickap/kube1-k8s-clusters/hooks/330855597/test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"ping_url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://api.github.com/repos/ruzickap/kube1-k8s-clusters/hooks/330855597/pings"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"deliveries_url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://api.github.com/repos/ruzickap/kube1-k8s-clusters/hooks/330855597/deliveries"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"last_response"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"code"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token null keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unused"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"message"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token null keyword"}},[s._v("null")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("Check the flux errors:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("flux logs "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--level")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("error --all-namespaces\n")])])]),a("p",[s._v("Check Kustomization, Helmreleases and Helmrepositories:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("kubectl get kustomizations,helmreleases,helmrepository "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-A")]),s._v("\n")])])]),a("p",[s._v("Output:")]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("NAMESPACE     NAME                                                           READY   STATUS                                                              AGE\nflux-system   kustomization.kustomize.toolkit.fluxcd.io/alerts               True    Applied revision: master/1546a9590214db9fea0ed9e033d98f6ef8966798   56m\nflux-system   kustomization.kustomize.toolkit.fluxcd.io/apps                 True    Applied revision: master/1546a9590214db9fea0ed9e033d98f6ef8966798   56m\nflux-system   kustomization.kustomize.toolkit.fluxcd.io/flux-system          True    Applied revision: master/1546a9590214db9fea0ed9e033d98f6ef8966798   57m\nflux-system   kustomization.kustomize.toolkit.fluxcd.io/helmrepository-dev   True    Applied revision: master/1546a9590214db9fea0ed9e033d98f6ef8966798   56m\nflux-system   kustomization.kustomize.toolkit.fluxcd.io/local                True    Applied revision: master/1546a9590214db9fea0ed9e033d98f6ef8966798   56m\nflux-system   kustomization.kustomize.toolkit.fluxcd.io/providers            True    Applied revision: master/1546a9590214db9fea0ed9e033d98f6ef8966798   56m\n\nNAMESPACE   NAME                                           READY   STATUS                             AGE\npodinfo     helmrelease.helm.toolkit.fluxcd.io/podinfo     True    Release reconciliation succeeded   56m\nwordpress   helmrelease.helm.toolkit.fluxcd.io/wordpress   True    Release reconciliation succeeded   56m\n\nNAMESPACE     NAME                                              URL                                      READY   STATUS                                                                               AGE\nflux-system   helmrepository.source.toolkit.fluxcd.io/bitnami   https://charts.bitnami.com/bitnami       True    Fetched revision: 1092b3963ba377fc4151cf6bff76e9a095868cc2394ac59c9faa815b0c6b172e   56m\nflux-system   helmrepository.source.toolkit.fluxcd.io/podinfo   https://stefanprodan.github.io/podinfo   True    Fetched revision: 83a3c595163a6ff0333e0154c790383b5be441b9db632cb36da11db1c4ece111   56m\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);