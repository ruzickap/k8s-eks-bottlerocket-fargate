(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{316:function(a,e,s){"use strict";s.r(e);var t=s(8),r=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"workloads"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#workloads"}},[a._v("#")]),a._v(" Workloads")]),a._v(" "),e("p",[a._v("Run some workload on the K8s...")]),a._v(" "),e("h2",{attrs:{id:"podinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#podinfo"}},[a._v("#")]),a._v(" podinfo")]),a._v(" "),e("p",[a._v("Install "),e("code",[a._v("podinfo")]),a._v(" "),e("a",{attrs:{href:"https://github.com/stefanprodan/podinfo/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/stefanprodan/podinfo/blob/master/charts/podinfo/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" --force-update sp https://stefanprodan.github.io/podinfo\nhelm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("6.0")]),a._v(".0 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" podinfo-keycloak --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - podinfo sp/podinfo "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\nserviceMonitor:\n  enabled: true\ningress:\n  enabled: true\n  annotations:\n    nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy-keycloak."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/auth\n    nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy-keycloak."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/start?rd=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$scheme")]),a._v("://\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$host")]),a._v("\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$request_uri")]),a._v("\n  hosts:\n    - host: podinfo-keycloak."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n    - secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n      hosts:\n        - podinfo-keycloak."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nEOF")]),a._v("\n")])])]),e("p",[a._v("Install "),e("code",[a._v("podinfo")]),a._v(" secured by "),e("code",[a._v("oauth2")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("6.0")]),a._v(".0 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" podinfo-dex --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - podinfo sp/podinfo "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\n# https://github.com/stefanprodan/podinfo/blob/master/charts/podinfo/values.yaml\nserviceMonitor:\n  enabled: true\ningress:\n  enabled: true\n  annotations:\n    nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/auth\n    nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/start?rd=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$scheme")]),a._v("://\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$host")]),a._v("\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$request_uri")]),a._v("\n  hosts:\n    - host: podinfo-dex."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n    - secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n      hosts:\n        - podinfo-dex."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nEOF")]),a._v("\n")])])]),e("p",[a._v("Install "),e("code",[a._v("podinfo")]),a._v(" and use Application Load Balancer:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("6.0")]),a._v(".0 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" default "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - podinfo-alb sp/podinfo "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\nui:\n  message: "Running using Application Load Balancer"\nservice:\n  type: NodePort\nserviceMonitor:\n  enabled: true\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: alb\n    alb.ingress.kubernetes.io/scheme: internet-facing\n  hosts:\n    - host: podinfo-alb.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\nEOF")]),a._v("\n")])])]),e("h2",{attrs:{id:"polaris"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#polaris"}},[a._v("#")]),a._v(" Polaris")]),a._v(" "),e("p",[a._v("Install "),e("code",[a._v("polaris")]),a._v(" "),e("a",{attrs:{href:"https://artifacthub.io/packages/helm/fairwinds-stable/polaris",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/FairwindsOps/charts/blob/master/stable/polaris/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" --force-update fairwinds-stable https://charts.fairwinds.com/stable\nhelm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4.0")]),a._v(".4 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" polaris --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - polaris fairwinds-stable/polaris "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\ndashboard:\n  ingress:\n    enabled: true\n    annotations:\n      nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/auth\n      nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/start?rd=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$scheme")]),a._v("://\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$host")]),a._v("\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$request_uri")]),a._v("\n    hosts:\n      - polaris."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n    tls:\n      - secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n        hosts:\n          - polaris."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nEOF")]),a._v("\n")])])]),e("h2",{attrs:{id:"kubei"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubei"}},[a._v("#")]),a._v(" kubei")]),a._v(" "),e("p",[a._v("Kubei installation is done through the K8s manifest (not helm chart).")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" https://raw.githubusercontent.com/Portshift/kubei/master/deploy/kubei.yaml\n\nkubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" - "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  namespace: kubei\n  name: kubei\n  annotations:\n    nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/auth\n    nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/start?rd=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$scheme")]),a._v("://\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$host")]),a._v("\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$request_uri")]),a._v("\n    nginx.ingress.kubernetes.io/app-root: /view\nspec:\n  rules:\n    - host: kubei."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      http:\n        paths:\n        - path: /\n          pathType: ImplementationSpecific\n          backend:\n            service:\n              name: kubei\n              port:\n                number: 8080\n  tls:\n    - hosts:\n        - kubei."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\nEOF")]),a._v("\n")])])]),e("h2",{attrs:{id:"kube-bench"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kube-bench"}},[a._v("#")]),a._v(" kube-bench")]),a._v(" "),e("p",[a._v("Install "),e("a",{attrs:{href:"https://github.com/aquasecurity/kube-bench",target:"_blank",rel:"noopener noreferrer"}},[a._v("kube-bench"),e("OutboundLink")],1),a._v(" according the "),e("a",{attrs:{href:"https://github.com/aquasecurity/kube-bench/blob/main/docs/asff.md",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/aquasecurity/kube-bench/blob/main/docs/asff.md"),e("OutboundLink")],1),a._v(":")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" https://raw.githubusercontent.com/aquasecurity/kube-bench/main/job-eks.yaml "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s@image: .*@image: aquasec/kube-bench:latest@"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n  kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" -\n")])])]),e("h2",{attrs:{id:"kubernetes-dashboard"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-dashboard"}},[a._v("#")]),a._v(" kubernetes-dashboard")]),a._v(" "),e("p",[a._v("Install "),e("code",[a._v("kubernetes-dashboard")]),a._v(" "),e("a",{attrs:{href:"https://artifacthub.io/packages/helm/k8s-dashboard/kubernetes-dashboard",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/kubernetes/dashboard/blob/d27d62127573e775b122976eccbc2c8aa94f5f84/charts/helm-chart/kubernetes-dashboard/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" --force-update kubernetes-dashboard https://kubernetes.github.io/dashboard/\nhelm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4.5")]),a._v(".0 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" kubernetes-dashboard --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\nextraArgs:\n  - --enable-skip-login\n  - --enable-insecure-login\n  - --disable-settings-authorizer\nprotocolHttp: true\ningress:\n enabled: true\n annotations:\n   nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/auth\n   nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/start?rd=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$scheme")]),a._v("://\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$host")]),a._v("\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$request_uri")]),a._v("\n hosts:\n   - kubernetes-dashboard."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n tls:\n   - secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n     hosts:\n       - kubernetes-dashboard."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nsettings:\n  clusterName: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n  itemsPerPage: 50\nmetricsScraper:\n  enabled: true\nserviceAccount:\n  name: kubernetes-dashboard-admin\nEOF")]),a._v("\n")])])]),e("p",[a._v("Create "),e("code",[a._v("clusterrolebinding")]),a._v(" to allow the kubernetes-dashboard to access\nthe K8s API:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("kubectl get clusterrolebinding kubernetes-dashboard-admin "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&>")]),a._v(" /dev/null "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" kubectl create clusterrolebinding kubernetes-dashboard-admin "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--clusterrole")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("cluster-admin "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--serviceaccount")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("kubernetes-dashboard:kubernetes-dashboard-admin\n")])])]),e("h2",{attrs:{id:"kubeview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubeview"}},[a._v("#")]),a._v(" kubeview")]),a._v(" "),e("p",[a._v("Install "),e("code",[a._v("kubeview")]),a._v(" "),e("a",{attrs:{href:"https://artifacthub.io/packages/helm/kubeview/kubeview",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/benc-uk/kubeview/blob/master/charts/kubeview/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" --force-update kubeview https://benc-uk.github.io/kubeview/charts\nhelm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.1")]),a._v(".20 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" kubeview --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - kubeview kubeview/kubeview "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\ningress:\n  enabled: true\n  annotations:\n    nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/auth\n    nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/start?rd=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$scheme")]),a._v("://\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$host")]),a._v("\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$request_uri")]),a._v("\n  hosts:\n    - host: kubeview."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('\n      paths: [ "/" ]\n  tls:\n    - secretName: ingress-cert-'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n      hosts:\n        - kubeview."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nEOF")]),a._v("\n")])])]),e("h2",{attrs:{id:"kube-ops-view"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kube-ops-view"}},[a._v("#")]),a._v(" kube-ops-view")]),a._v(" "),e("p",[a._v("Install "),e("code",[a._v("kube-ops-view")]),a._v(" "),e("a",{attrs:{href:"https://hub.kubeapps.com/charts/stable/kube-ops-view",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/helm/charts/blob/master/stable/kube-ops-view/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" --force-update stable https://charts.helm.sh/stable\nhelm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.2")]),a._v(".4 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" kube-ops-view --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - kube-ops-view stable/kube-ops-view "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\ningress:\n  enabled: true\n  hostname: kube-ops-view."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n  annotations:\n    nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/auth\n    nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/start?rd=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$scheme")]),a._v("://\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$host")]),a._v("\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$request_uri")]),a._v("\n  tls:\n    - secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n      hosts:\n        - kube-ops-view."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nrbac:\n  create: true\nEOF")]),a._v("\n")])])]),e("h2",{attrs:{id:"s3-upload-test"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#s3-upload-test"}},[a._v("#")]),a._v(" S3 upload test")]),a._v(" "),e("p",[a._v("The namespace "),e("code",[a._v("s3-test")]),a._v(" and the "),e("code",[a._v("s3-test")]),a._v(" service account was created by eksctl.")]),a._v(" "),e("p",[a._v("Test S3 access, upload and delete operations:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" - "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\napiVersion: v1\nkind: Pod\nmetadata:\n  name: s3-test\n  namespace: s3-test\nspec:\n  serviceAccountName: s3-test\n  containers:\n  - name: aws-cli\n    image: amazon/aws-cli:2.4.29\n    securityContext:\n      runAsUser: 1000\n      runAsGroup: 3000\n    command:\n      - /bin/bash\n      - -c\n      - |\n        set -x\n        export HOME=/tmp\n        aws s3 ls --region "'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${AWS_DEFAULT_REGION}")]),a._v('" "s3://'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/"\n        aws s3 cp --region "'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${AWS_DEFAULT_REGION}")]),a._v('" /etc/hostname "s3://'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/"\n        aws s3 ls --region "'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${AWS_DEFAULT_REGION}")]),a._v('" "s3://'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/"\n        aws s3 rm "s3://'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/hostname"\n    resources:\n      requests:\n        memory: "64Mi"\n        cpu: "250m"\n      limits:\n        memory: "128Mi"\n        cpu: "500m"\n  restartPolicy: Never\nEOF')]),a._v("\n\nkubectl "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("wait")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" s3-test "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--for")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("condition"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Ready pod s3-test "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("\nkubectl logs "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" s3-test s3-test\nkubectl delete pod "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" s3-test s3-test\n")])])]),e("p",[a._v("Output:")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('pod/s3-test created\npod/s3-test condition met\n+ export HOME=/tmp\n+ HOME=/tmp\n+ aws s3 ls --region eu-west-1 s3://kube1.k8s.mylabs.dev/\n+ aws s3 cp --region eu-west-1 /etc/hostname s3://kube1.k8s.mylabs.dev/\nupload: ../etc/hostname to s3://kube1.k8s.mylabs.dev/hostname\n+ aws s3 ls --region eu-west-1 s3://kube1.k8s.mylabs.dev/\n2021-11-29 18:01:17          8 hostname\n+ aws s3 rm s3://kube1.k8s.mylabs.dev/hostname\ndelete: s3://kube1.k8s.mylabs.dev/hostname\npod "s3-test" deleted\n')])])])])}),[],!1,null,null,null);e.default=r.exports}}]);