(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{318:function(a,s,e){"use strict";e.r(s);var t=e(8),r=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"other-workloads"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#other-workloads"}},[a._v("#")]),a._v(" Other workloads")]),a._v(" "),s("h2",{attrs:{id:"cluster-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cluster-api"}},[a._v("#")]),a._v(" Cluster API")]),a._v(" "),s("p",[a._v("Install "),s("code",[a._v("clusterctl")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CLUSTERAPI_VERSION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.3.17"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" clusterctl "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&>")]),a._v(" /dev/null"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://github.com/kubernetes-sigs/cluster-api/releases/download/v'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTERAPI_VERSION}")]),a._v("/clusterctl-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s/./\\L&/g"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('-amd64"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" /usr/local/bin/clusterctl\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/clusterctl\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CLUSTERAWSADM_VERSION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.6.6"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" clusterawsadm "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&>")]),a._v(" /dev/null"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://github.com/kubernetes-sigs/cluster-api-provider-aws/releases/download/v'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTERAWSADM_VERSION}")]),a._v("/clusterawsadm-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s/./\\L&/g"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('-amd64"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" /usr/local/bin/clusterawsadm\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/clusterawsadm\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n")])])]),s("p",[a._v("The "),s("code",[a._v("clusterawsadm")]),a._v(" utility takes the credentials that you set as environment\nvariables and uses them to create a CloudFormation stack in your AWS account\nwith the correct IAM resources:")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("OIDC_PROVIDER_URL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("aws eks describe-cluster "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--query")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cluster.identity.oidc.issuer"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--output")]),a._v(" text"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" OIDC_PROVIDER_URL\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/awsiamconfiguration.yaml"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\napiVersion: bootstrap.aws.infrastructure.cluster.x-k8s.io/v1alpha1\nkind: AWSIAMConfiguration\nspec:\n  eks:\n    enable: true\n    iamRoleCreation: true\n    defaultControlPlaneRole:\n      disable: false\n    managedMachinePool:\n      disable: false\nEOF")]),a._v("\n\nclusterawsadm bootstrap iam create-cloudformation-stack "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--config")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/awsiamconfiguration.yaml"')]),a._v("\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Attempting to create AWS CloudFormation stack cluster-api-provider-aws-sigs-k8s-io\n\nFollowing resources are in the stack:\n\nResource                  |Type                                                                                |Status\nAWS::IAM::InstanceProfile |control-plane.cluster-api-provider-aws.sigs.k8s.io                                  |CREATE_COMPLETE\nAWS::IAM::InstanceProfile |controllers.cluster-api-provider-aws.sigs.k8s.io                                    |CREATE_COMPLETE\nAWS::IAM::InstanceProfile |nodes.cluster-api-provider-aws.sigs.k8s.io                                          |CREATE_COMPLETE\nAWS::IAM::ManagedPolicy   |arn:aws:iam::7xxxxxxxxxx7:policy/control-plane.cluster-api-provider-aws.sigs.k8s.io |CREATE_COMPLETE\nAWS::IAM::ManagedPolicy   |arn:aws:iam::7xxxxxxxxxx7:policy/nodes.cluster-api-provider-aws.sigs.k8s.io         |CREATE_COMPLETE\nAWS::IAM::ManagedPolicy   |arn:aws:iam::7xxxxxxxxxx7:policy/controllers.cluster-api-provider-aws.sigs.k8s.io   |CREATE_COMPLETE\nAWS::IAM::Role            |control-plane.cluster-api-provider-aws.sigs.k8s.io                                  |CREATE_COMPLETE\nAWS::IAM::Role            |controllers.cluster-api-provider-aws.sigs.k8s.io                                    |CREATE_COMPLETE\nAWS::IAM::Role            |eks-controlplane.cluster-api-provider-aws.sigs.k8s.io                               |CREATE_COMPLETE\nAWS::IAM::Role            |eks-nodegroup.cluster-api-provider-aws.sigs.k8s.io                                  |CREATE_COMPLETE\nAWS::IAM::Role            |nodes.cluster-api-provider-aws.sigs.k8s.io                                          |CREATE_COMPLETE\n")])])]),s("p",[a._v("Initialize the management cluster:")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("AWS_REGION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${AWS_DEFAULT_REGION}")]),a._v('"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("AWS_B64ENCODED_CREDENTIALS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("clusterawsadm bootstrap credentials encode-as-profile"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" AWS_B64ENCODED_CREDENTIALS\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("EXP_EKS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("EXP_EKS_IAM")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# https://cluster-api-aws.sigs.k8s.io/topics/machinepools.html")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("EXP_MACHINE_POOL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# https://blog.scottlowe.org/2021/03/02/deploying-a-cni-automatically-with-a-clusterresourceset/")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("EXP_CLUSTER_RESOURCE_SET")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\nkubectl get namespace capi-system "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&>")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" clusterctl init "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--infrastructure")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("aws --control-plane"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"aws-eks:v'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTERAWSADM_VERSION}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--bootstrap")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"aws-eks:v'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTERAWSADM_VERSION}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--core")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cluster-api:v'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTERAPI_VERSION}")]),a._v('"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Fix https://github.com/kubernetes-sigs/cluster-api-provider-aws/issues/2358")]),a._v("\nkubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" - "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: capa-eks-control-plane-system-capa-eks-control-plane-manager-role\nrules:\n- apiGroups:\n  - ""\n  resources:\n  - secrets\n  verbs:\n  - create\n  - delete\n  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - cluster.x-k8s.io\n  resources:\n  - clusters\n  - clusters/status\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - controlplane.cluster.x-k8s.io\n  resources:\n  - awsmanagedcontrolplanes\n  verbs:\n  - create\n  - delete\n  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - controlplane.cluster.x-k8s.io\n  resources:\n  - awsmanagedcontrolplanes/status\n  verbs:\n  - get\n  - patch\n  - update\n- apiGroups:\n  - ""\n  resources:\n  - events\n  verbs:\n  - create\n  - get\n  - list\n  - patch\n  - watch\n- apiGroups:\n  - infrastructure.cluster.x-k8s.io\n  resources:\n  - awsclustercontrolleridentities\n  - awsclusterroleidentities\n  - awsclusterstaticidentities\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - infrastructure.cluster.x-k8s.io\n  resources:\n  - awsmachinepools\n  - awsmachinepools/status\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - infrastructure.cluster.x-k8s.io\n  resources:\n  - awsmachines\n  - awsmachines/status\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - infrastructure.cluster.x-k8s.io\n  resources:\n  - awsmanagedclusters\n  - awsmanagedclusters/status\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - infrastructure.cluster.x-k8s.io\n  resources:\n  - awsmanagedmachinepools\n  - awsmanagedmachinepools/status\n  verbs:\n  - get\n  - list\n  - watch\nEOF')]),a._v("\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('WARNING: `encode-as-profile` should only be used for bootstrapping.\n\nInstalling the clusterctl inventory CRD\nFetching providers\nSkipping installing cert-manager as it is already installed\nInstalling Provider="cluster-api" Version="v0.3.17" TargetNamespace="capi-system"\nCreating shared objects Provider="cluster-api" Version="v0.3.17"\nCreating instance objects Provider="cluster-api" Version="v0.3.17" TargetNamespace="capi-system"\nCreating inventory entry Provider="cluster-api" Version="v0.3.17" TargetNamespace="capi-system"\nInstalling Provider="bootstrap-aws-eks" Version="v0.6.6" TargetNamespace="capa-eks-bootstrap-system"\nCreating shared objects Provider="bootstrap-aws-eks" Version="v0.6.6"\nCreating instance objects Provider="bootstrap-aws-eks" Version="v0.6.6" TargetNamespace="capa-eks-bootstrap-system"\nCreating inventory entry Provider="bootstrap-aws-eks" Version="v0.6.6" TargetNamespace="capa-eks-bootstrap-system"\nInstalling Provider="control-plane-aws-eks" Version="v0.6.6" TargetNamespace="capa-eks-control-plane-system"\nCreating shared objects Provider="control-plane-aws-eks" Version="v0.6.6"\nCreating instance objects Provider="control-plane-aws-eks" Version="v0.6.6" TargetNamespace="capa-eks-control-plane-system"\nCreating inventory entry Provider="control-plane-aws-eks" Version="v0.6.6" TargetNamespace="capa-eks-control-plane-system"\nInstalling Provider="infrastructure-aws" Version="v0.6.6" TargetNamespace="capa-system"\nCreating shared objects Provider="infrastructure-aws" Version="v0.6.6"\nCreating instance objects Provider="infrastructure-aws" Version="v0.6.6" TargetNamespace="capa-system"\nCreating inventory entry Provider="infrastructure-aws" Version="v0.6.6" TargetNamespace="capa-system"\n\nYour management cluster has been initialized successfully!\n\nYou can now create your first workload cluster by running the following:\n\n  clusterctl config cluster [name] --kubernetes-version [version] | kubectl apply -f -\n\nWarning: resource clusterroles/capa-eks-control-plane-system-capa-eks-control-plane-manager-role is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.\n')])])]),s("p",[a._v("Create cluster:")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("AWS_SSH_KEY_NAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("eksctl-"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v("-nodegroup-ng01-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("ssh-keygen "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" ~/.ssh/id_rsa.pub "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" PKCS8 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" openssl pkey "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-pubin")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-outform")]),a._v(" DER "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" openssl md5 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# DevSkim: ignore DS126858")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" AWS_SSH_KEY_NAME\n\nkubectl get namespace tenants "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&>")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" kubectl create namespace tenants\nkubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" - "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\napiVersion: controlplane.cluster.x-k8s.io/v1alpha3\nkind: AWSManagedControlPlane\nmetadata:\n  name: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v("1\n  namespace: tenants\nspec:\n  additionalTags:\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TAGS}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s/ /'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[a._v("\\\\")]),a._v('n    /g; s/^/    /g; s/=/: /g"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n  eksClusterName: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v('1\n  associateOIDCProvider: true\n  region: "'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${AWS_DEFAULT_REGION}")]),a._v('"\n  sshKeyName: "'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${AWS_SSH_KEY_NAME}")]),a._v('"\n  # https://docs.aws.amazon.com/eks/latest/userguide/kubernetes-versions.html\n  version: "v1.20.4"\n  # Not working: https://github.com/kubernetes-sigs/cluster-api-provider-aws/issues/2409\n  iamAuthenticatorConfig:\n    mapRoles:\n    - username: "admin"\n      rolearn: "'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${AWS_CONSOLE_ADMIN_ROLE_ARN}")]),a._v('"\n      groups:\n      - "system:masters"\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1alpha3\nkind: AWSManagedCluster\nmetadata:\n  name: '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v("1\n  namespace: tenants\n---\napiVersion: cluster.x-k8s.io/v1alpha3\nkind: Cluster\nmetadata:\n  name: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v("1\n  namespace: tenants\n  labels:\n    type: tenant\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n      - 192.168.0.0/16\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3\n    kind: AWSManagedControlPlane\n    name: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v("1\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3\n    kind: AWSManagedCluster\n    name: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v("1\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1alpha3\nkind: AWSManagedMachinePool\nmetadata:\n  name: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v("1-pool-0\n  namespace: tenants\nspec:\n  amiType: AL2_x86_64\n  diskSize: 10\n  instanceType: t2.small\n  eksNodegroupName: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v("1-ng\n  scaling:\n    minSize: 1\n    maxSize: 3\n---\napiVersion: exp.cluster.x-k8s.io/v1alpha3\nkind: MachinePool\nmetadata:\n  name: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v("1-pool-0\n  namespace: tenants\nspec:\n  clusterName: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v('1\n  replicas: 2\n  template:\n    spec:\n      bootstrap:\n        dataSecretName: ""\n      clusterName: '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v("1\n      infrastructureRef:\n        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3\n        kind: AWSManagedMachinePool\n        name: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v("1-pool-0\nEOF")]),a._v("\n\nkubectl "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wait")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--for")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("condition"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Ready "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--timeout")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("30m "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" tenants machinepool "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v('1-pool-0"')]),a._v("\n")])])]),s("p",[a._v("Get cluster details:")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("kubectl get cluster,awsmanagedcontrolplane,machinepool,awsmanagedmachinepool,clusterresourceset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" tenants\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("NAME                              PHASE\ncluster.cluster.x-k8s.io/kube11   Provisioned\n\nNAME                                                          CLUSTER   READY   VPC                     BASTION IP\nawsmanagedcontrolplane.controlplane.cluster.x-k8s.io/kube11   kube11    true    vpc-08aaa8fe61f860f65\n\nNAME                                             REPLICAS   PHASE     VERSION\nmachinepool.exp.cluster.x-k8s.io/kube11-pool-0   2          Running\n\nNAME                                                                  READY   REPLICAS\nawsmanagedmachinepool.infrastructure.cluster.x-k8s.io/kube11-pool-0   true    2\n")])])]),s("p",[a._v("Get the cluster details:")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("clusterctl describe cluster --show-conditions all "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" tenants "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v('1"')]),a._v("\n")])])]),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("NAME                                                READY  SEVERITY  REASON   SINCE  MESSAGE\n/kube11                                             True                      3m10s\n├─ClusterInfrastructure - AWSManagedCluster/kube11\n└─ControlPlane - AWSManagedControlPlane/kube11      True                      3m8s\n              ├─ClusterSecurityGroupsReady          True                      14m\n              ├─EKSAddonsConfigured                 True                      3m9s\n              ├─EKSControlPlaneCreating             False  Info      created  3m10s\n              ├─EKSControlPlaneReady                True                      3m9s\n              ├─IAMAuthenticatorConfigured          True                      3m8s\n              ├─IAMControlPlaneRolesReady           True                      14m\n              ├─InternetGatewayReady                True                      16m\n              ├─NatGatewaysReady                    True                      14m\n              ├─RouteTablesReady                    True                      14m\n              ├─SubnetsReady                        True                      16m\n              └─VpcReady                            True                      16m\n")])])]),s("p",[a._v("Get kubeconfig for the new EKS cluster:")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("clusterctl get kubeconfig "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v('1"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" tenants "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/kubeconfig-"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v('1.conf"')]),a._v("\n")])])]),s("p",[a._v("Display details about all nodes in new cluster "),s("code",[a._v("kube11")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("kubectl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--kubeconfig")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/kubeconfig-"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v('1.conf"')]),a._v(" get nodes "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" node.kubernetes.io/instance-type "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" topology.kubernetes.io/zone\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("NAME                                           STATUS   ROLES    AGE    VERSION              INSTANCE-TYPE   ZONE\nip-10-0-219-81.eu-central-1.compute.internal   Ready    &lt;none>   104s   v1.20.4-eks-6b7464   t2.small        eu-central-1c\nip-10-0-73-114.eu-central-1.compute.internal   Ready    &lt;none>   86s    v1.20.4-eks-6b7464   t2.small        eu-central-1a\n")])])]),s("p",[a._v("Delete new EKS cluster:")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("kubectl delete Cluster,AWSManagedControlPlane,MachinePool,AWSManagedMachinePool,ClusterResourceSet "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" tenants "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--all")]),a._v("\n")])])]),s("h2",{attrs:{id:"hashicorp-vault"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashicorp-vault"}},[a._v("#")]),a._v(" HashiCorp Vault")]),a._v(" "),s("p",[a._v("Install "),s("code",[a._v("vault")]),a._v(" "),s("a",{attrs:{href:"https://artifacthub.io/packages/helm/hashicorp/vault",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),s("OutboundLink")],1),a._v("\nand modify the\n"),s("a",{attrs:{href:"https://github.com/hashicorp/vault-helm/blob/master/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm repo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" --force-update hashicorp https://helm.releases.hashicorp.com\nhelm upgrade "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.15")]),a._v(".0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" vault "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--wait")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - vault hashicorp/vault "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\ninjector:\n  enabled: false\nserver:\n  ingress:\n    enabled: true\n    hosts:\n      - host: vault."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n    tls:\n      - secretName: ingress-cert-"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n        hosts:\n          - vault."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('\n  dataStorage:\n    size: 1Gi\n    storageClass: gp3\n  standalone:\n    enabled: true\n    config: |\n      ui = true\n      log_level = "trace"\n      listener "tcp" {\n        tls_disable = 1\n        address = "[::]:8200"\n        cluster_address = "[::]:8201"\n      }\n      seal "awskms" {\n        region     = "'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${AWS_DEFAULT_REGION}")]),a._v('"\n        kms_key_id = "'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${KMS_KEY_ID}")]),a._v('"\n      }\n      storage "file" {\n        path = "/vault/data"\n      }\n  serviceAccount:\n    create: false\n    name: vault\nEOF')]),a._v("\n")])])]),s("p",[a._v("Wait for Vault to be ready:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("dig")]),a._v(" +nocmd +noall +answer +ttlid a "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"vault.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("dig")]),a._v(" +nocmd +noall +answer +ttlid a "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"dex.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("date")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n")])])]),s("p",[a._v("Check the status of the vault server - it should be sealed and uninitialized:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" vault vault-0 -- vault status "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Key                      Value\n---                      -----\nRecovery Seal Type       awskms\nInitialized              false\nSealed                   true\nTotal Recovery Shares    0\nThreshold                0\nUnseal Progress          0/0\nUnseal Nonce             n/a\nVersion                  1.8.1\nStorage Type             file\nHA Enabled               false\n")])])]),s("p",[a._v("Initialize the vault server:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/vault_cluster-keys.json"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("kubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" vault vault-0 -- "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/bin/sh"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-c"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"export VAULT_CLIENT_TIMEOUT=500s && vault operator init -format=json"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tee")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/vault_cluster-keys.json"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"unseal_keys_b64"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"unseal_keys_hex"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"unseal_shares"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"unseal_threshold"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"recovery_keys_b64"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"AzxM6NE0txz8tGBZYJUYMmkgxf5uNnHn0BNmLFzOnTAp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"5yuvrqORnMRddsRccEixs83IkH4ilJak0h4d3AYytpds"')]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"recovery_keys_hex"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"033c4ce8d134b71cfcb46059609518326920c5fe6e3671e7d013662c5cce9d3029"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"e72bafaea3919cc45d76c45c7048b1b3cdc8907e229496a4d21e1ddc0632b6976c"')]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"recovery_keys_shares"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"recovery_keys_threshold"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"root_token"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s.pxxxxxxxxxxxxxxxxxxxxxxU8"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("The vault server should be initialized + unsealed now:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" vault vault-0 -- vault status\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Key                      Value\n---                      -----\nRecovery Seal Type       shamir\nInitialized              true\nSealed                   false\nTotal Recovery Shares    5\nThreshold                3\nVersion                  1.8.1\nStorage Type             file\nCluster Name             vault-cluster-35710bf5\nCluster ID               4b7168eb-6bfc-30fa-8ab9-060477394dc6\nHA Enabled               false\n")])])]),s("p",[a._v("Configure vault policy + authentication:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("VAULT_ROOT_TOKEN")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("jq "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".root_token"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/vault_cluster-keys.json"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" VAULT_ROOT_TOKEN\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("VAULT_ADDR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://vault.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("VAULT_SKIP_VERIFY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"true"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("VAULT_CLUSTER_FQDN")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tr")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" -"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" VAULT_CLUSTER_FQDN\n")])])]),s("p",[a._v("Login to vault as root user:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("vault login "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_ROOT_TOKEN}")]),a._v('"')]),a._v("\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('Success! You are now authenticated. The token information displayed below\nis already stored in the token helper. You do NOT need to run "vault login"\nagain. Future Vault requests will automatically use this token.\n\nKey                  Value\n---                  -----\ntoken                s.pxxxxxxxxxxxxxxxxxxxxxx8\ntoken_accessor       ruDTYdVBePlKKPn8bWVgWzi0\ntoken_duration       ∞\ntoken_renewable      false\ntoken_policies       ["root"]\nidentity_policies    []\npolicies             ["root"]\n')])])]),s("p",[a._v("Create admin policy:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/my-admin-policy.hcl"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\npath "*" {\n  capabilities = ["create", "read", "update", "delete", "list", "sudo"]\n}\nEOF')]),a._v("\nvault policy "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" my-admin-policy "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/my-admin-policy.hcl"')]),a._v("\n")])])]),s("p",[a._v("Configure GitHub + Dex OIDC authentication:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" vault auth list "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" github"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n  vault auth "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" github\n  vault "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" auth/github/config "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("organization")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_GITHUB_ORG_NAME}")]),a._v('"')]),a._v("\n  vault "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" auth/github/map/teams/cluster-admin "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("my-admin-policy\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_CERTIFICATE}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/letsencrypt.pem"')]),a._v("\n  vault auth "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" oidc\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n  vault "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" auth/oidc/config "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("oidc_discovery_ca_pem")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"@tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/letsencrypt.pem"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("oidc_discovery_url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://dex.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("oidc_client_id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"vault.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("oidc_client_secret")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("default_role")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"my-oidc-role"')]),a._v("\n  vault "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" auth/oidc/role/my-oidc-role "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("bound_audiences")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"vault.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("allowed_redirect_uris")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://vault.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/ui/vault/auth/oidc/oidc/callback,http://localhost:8250/oidc/callback"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("user_claim")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"sub"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("policies")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"my-admin-policy"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n")])])]),s("p",[a._v("You should be now able to login using OIDC (Dex):")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" ~/.vault-token\nvault login "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-method")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("oidc\nvault secrets list\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('Complete the login via your OIDC provider. Launching browser to:\n\n    https://dex.kube1.k8s.mylabs.dev/auth?client_id=vault.kube1.k8s.mylabs.dev&amp;nonce=n_vaiwZVJEVlpDheqXUyUJ&amp;redirect_uri=http%3A%2F%2Flocalhost%3A8250%2Foidc%2Fcallback&amp;response_type=code&amp;scope=openid&amp;state=st_g4NPcYQyzjYT7nnoVWsK\n\n\nSuccess! You are now authenticated. The token information displayed below\nis already stored in the token helper. You do NOT need to run "vault login"\nagain. Future Vault requests will automatically use this token.\n\nKey                  Value\n---                  -----\ntoken                s.9xxxxxxxxxxxxxxxxxxxxxxH\ntoken_accessor       BXl2rAkOfDGLbH7y1Zu0Zmw3\ntoken_duration       768h\ntoken_renewable      true\ntoken_policies       ["default" "my-admin-policy"]\nidentity_policies    []\npolicies             ["default" "my-admin-policy"]\ntoken_meta_role      my-oidc-role\n\nPath          Type         Accessor              Description\n----          ----         --------              -----------\ncubbyhole/    cubbyhole    cubbyhole_03a9c7e4    per-token private secret storage\nidentity/     identity     identity_3b8d49bf     identity store\nsys/          system       system_654c1a4e       system endpoints used for control, policy and debugging\n')])])]),s("h3",{attrs:{id:"generate-root-ca"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generate-root-ca"}},[a._v("#")]),a._v(" Generate Root CA")]),a._v(" "),s("p",[a._v("This should emulate your Company CA.\nI used these guides to set it up:")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://learn.hashicorp.com/tutorials/vault/kubernetes-external-vault?in=vault/kubernetes#install-the-vault-helm-chart",target:"_blank",rel:"noopener noreferrer"}},[a._v("Integrate a Kubernetes Cluster with an External Vault"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://learn.hashicorp.com/tutorials/vault/kubernetes-cert-manager",target:"_blank",rel:"noopener noreferrer"}},[a._v("Configure Vault as a Certificate Manager in Kubernetes with Helm"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://cert-manager.io/docs/configuration/vault/#authenticating-with-kubernetes-service-accounts",target:"_blank",rel:"noopener noreferrer"}},[a._v("cert-manager Vault"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://learn.hashicorp.com/tutorials/vault/agent-kubernetes",target:"_blank",rel:"noopener noreferrer"}},[a._v("Vault Agent with Kubernetes"),s("OutboundLink")],1)])]),a._v(" "),s("p",[a._v("Configure PKI secrets engine:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" vault secrets list "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('-pki/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n  vault secrets "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('-pki"')]),a._v(" pki\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n")])])]),s("p",[a._v("Tune the "),s("code",[a._v("${VAULT_CLUSTER_FQDN}-pki")]),a._v(" secrets engine to issue certificates with\na maximum time-to-live (TTL) of 87600 hours:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("vault secrets tune -max-lease-ttl"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("87600h "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('-pki"')]),a._v("\n")])])]),s("p",[a._v("Generate the "),s("code",[a._v("root")]),a._v(" certificate and save the certificate in "),s("code",[a._v("CA_cert.crt")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("vault "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-field")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("certificate "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('-pki/root/generate/internal"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("common_name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("country")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CZ"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("organization")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"PA"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("alt_names")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v(",*."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ttl")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("87600h "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/CA_cert.crt"')]),a._v("\n")])])]),s("p",[a._v("Configure the PKI secrets engine certificate issuing and certificate revocation\nlist (CRL) endpoints to use the Vault service in the "),s("code",[a._v("vault")]),a._v(" namespace:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("vault "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('-pki/config/urls"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("issuing_certificates")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://vault.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/v1/pki/ca"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("crl_distribution_points")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://vault.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/v1/pki/crl"')]),a._v("\n")])])]),s("h3",{attrs:{id:"generate-intermediate-ca"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generate-intermediate-ca"}},[a._v("#")]),a._v(" Generate Intermediate CA")]),a._v(" "),s("p",[a._v("Enable the "),s("code",[a._v("pki")]),a._v(" secrets engine at the "),s("code",[a._v("${VAULT_CLUSTER_FQDN}-pki_int")]),a._v(" path:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("vault secrets "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('-pki_int"')]),a._v(" pki\n")])])]),s("p",[a._v("Tune the "),s("code",[a._v("${VAULT_CLUSTER_FQDN}-pki_int")]),a._v(" secrets engine to issue certificates\nwith a maximum time-to-live (TTL) of 43800 hours:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("vault secrets tune -max-lease-ttl"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("43800h "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('-pki_int"')]),a._v("\n")])])]),s("p",[a._v("Execute the following command to generate an intermediate and save the\nCSR as "),s("code",[a._v("pki_intermediate.csr")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("vault "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-format")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("json "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('-pki_int/intermediate/generate/internal"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("common_name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("country")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CZ"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("organization")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"PA2"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("alt_names")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v(",*."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n  jq "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".data.csr"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/pki_intermediate.csr"')]),a._v("\n")])])]),s("p",[a._v("Sign the intermediate certificate with the root certificate and save the\ngenerated certificate as "),s("code",[a._v("intermediate.cert.pem")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("vault "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-format")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("json "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('-pki/root/sign-intermediate"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("csr")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"@tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/pki_intermediate.csr"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("format")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("pem_bundle "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ttl")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"43800h"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n  jq "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".data.certificate"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/intermediate.cert.pem"')]),a._v("\n")])])]),s("p",[a._v("Once the CSR is signed and the root CA returns a certificate, it can be\nimported back into Vault:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("vault "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('-pki_int/intermediate/set-signed"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("certificate")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"@tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/intermediate.cert.pem"')]),a._v("\n")])])]),s("h3",{attrs:{id:"configure-cert-manager-authentication-to-vault"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configure-cert-manager-authentication-to-vault"}},[a._v("#")]),a._v(" Configure cert-manager authentication to vault")]),a._v(" "),s("p",[a._v("I would like to simulate the scenario, where "),s("code",[a._v("cert-manager")]),a._v(" will connect to\nexternal Vault instance - therefore I can not use the Kubernetes authentication.\nThe vault instance is running on the same K8s cluster, but I will configure the\ncert-manager to use "),s("a",{attrs:{href:"https://cert-manager.io/docs/configuration/vault/#authenticating-via-an-approle",target:"_blank",rel:"noopener noreferrer"}},[a._v("AppRole"),s("OutboundLink")],1),a._v('\nto simulate "external vault access".')]),a._v(" "),s("p",[a._v("Enable the AppRole auth method:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("vault auth "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" approle\n")])])]),s("p",[a._v("Create a policy that enables read access to the PKI secrets engine paths:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/pki_int_policy.hcl"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\npath "'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('-pki_int*"                                              { capabilities = ["read", "list"] }\npath "'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v("-pki_int/roles/cert-manager-role-"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('" { capabilities = ["create", "update"] }\npath "'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v("-pki_int/sign/cert-manager-role-"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('"  { capabilities = ["create", "update"] }\npath "'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v("-pki_int/issue/cert-manager-role-"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('" { capabilities = ["create"] }\nEOF')]),a._v("\nvault policy "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cert-manager-policy-'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/pki_int_policy.hcl"')]),a._v("\n")])])]),s("p",[a._v("Create a named role:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("vault "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"auth/approle/role/cert-manager-role-'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("policies")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cert-manager-policy-'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('"')]),a._v("\n")])])]),s("p",[a._v("Configure a role that enables the creation of certificates for domain with any\nsubdomains:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("vault "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v("-pki_int/roles/cert-manager-role-"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("allowed_domains")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("allow_subdomains")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("max_ttl")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("720h "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("require_cn")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("false\n")])])]),s("p",[a._v("Get "),s("code",[a._v("secretId")]),a._v(" and "),s("code",[a._v("roleId")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("VAULT_CERT_MANAGER_ROLE_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("vault "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("read")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"auth/approle/role/cert-manager-role-'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('/role-id"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--format")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("json "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" jq "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".data.role_id"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("VAULT_CERT_MANAGER_SECRET_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("vault "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"auth/approle/role/cert-manager-role-'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v('/secret-id"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--format")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("json "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" jq "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".data.secret_id"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),s("p",[a._v("Create K8s secret with "),s("code",[a._v("secretId")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" - "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\napiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  name: cert-manager-vault-approle\n  namespace: cert-manager\ndata:\n  secretId: "'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CERT_MANAGER_SECRET_ID}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" base64"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"\nEOF')]),a._v("\n")])])]),s("p",[a._v("Create an Issuer, named vault-issuer, that defines Vault as a certificate\nissuer:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" - "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: vault-issuer\n  namespace: cert-manager\nspec:\n  vault:\n    path: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v("-pki_int/sign/cert-manager-role-"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CLUSTER_FQDN}")]),a._v("\n    server: https://vault."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n    caBundle: "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_CERTIFICATE}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" base64 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w0")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('\n    auth:\n      appRole:\n        path: approle\n        roleId: "'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${VAULT_CERT_MANAGER_ROLE_ID}")]),a._v('"\n        secretRef:\n          name: cert-manager-vault-approle\n          key: secretId\nEOF')]),a._v("\n")])])]),s("p",[a._v("Generate test certificate:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl get namespace podinfo-vault "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&>")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" kubectl create namespace podinfo-vault\nkubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" - "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: podinfo-vault-certificate\n  namespace: podinfo-vault\nspec:\n  secretName: podinfo-vault-certificate-tls\n  duration: 250h\n  # Minimum of renewBefore should be 240h otherwise ingress-nginx will start complaining (https://github.com/kubernetes/ingress-nginx/blob/1b76ad70ca237fdd2a6ee1017cd16fda1908df90/internal/ingress/controller/controller.go#L1225)\n  renewBefore: 240h\n  subject:\n    organizations:\n    - MyLabs\n  issuerRef:\n    name: vault-issuer\n    kind: ClusterIssuer\n  commonName: "*.vault-test-crt.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"\n  dnsNames:\n  - "*.vault-test-crt.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"\n  - "vault-test-crt.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"\nEOF')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("\n")])])]),s("p",[a._v("Check the certificates:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl get secrets "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" podinfo-vault podinfo-vault-certificate-tls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--output")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("jsonpath"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{.data.ca'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[a._v("\\\\")]),a._v('.crt}"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" base64 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--decode")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" openssl x509 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-text")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-noout")]),a._v("\nkubectl get secrets "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" podinfo-vault podinfo-vault-certificate-tls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--output")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("jsonpath"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{.data.tls'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[a._v("\\\\")]),a._v('.crt}"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" base64 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--decode")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" openssl x509 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-text")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-noout")]),a._v("\nkubectl get secrets "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" podinfo-vault podinfo-vault-certificate-tls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--output")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("jsonpath"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{.data.tls'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[a._v("\\\\")]),a._v('.key}"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" base64 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--decode")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" openssl rsa "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-check")]),a._v("\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Certificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            55:67:74:42:21:45:0d:a7:9c:c0:b1:0e:b0:f4:6c:83:f2:7d:06:cc\n    Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C=CZ, O=PA, CN=kube1.k8s.mylabs.dev\n        Validity\n            Not Before: Nov 29 18:03:20 2021 GMT\n            Not After : Nov 28 18:03:50 2026 GMT\n        Subject: CN=kube1.k8s.mylabs.dev\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\n                Modulus:\n                    00:d9:e4:54:d5:4a:61:29:32:d4:83:eb:bf:02:eb:\n...\n                    97:7d\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Subject Key Identifier:\n                EC:BA:5D:62:E3:85:5E:42:DA:C4:AA:91:A0:9E:8A:0D:7D:27:22:B4\n            X509v3 Authority Key Identifier:\n                keyid:D7:E5:2D:A4:BE:E2:EA:8B:AF:50:21:A2:B6:58:B7:3B:05:22:06:3C\n\n            Authority Information Access:\n                CA Issuers - URI:https://vault.kube1.k8s.mylabs.dev/v1/pki/ca\n\n            X509v3 Subject Alternative Name:\n                DNS:kube1.k8s.mylabs.dev\n            X509v3 CRL Distribution Points:\n\n                Full Name:\n                  URI:https://vault.kube1.k8s.mylabs.dev/v1/pki/crl\n\n    Signature Algorithm: sha256WithRSAEncryption\n         3f:61:24:e2:57:65:ea:41:1a:d6:1b:b0:8c:ef:85:51:41:0d:\n...\n         a6:72:d2:e7\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            30:f9:ca:e3:67:78:84:45:0e:0f:8b:05:bc:b3:9f:19:5c:ae:eb\n    Signature Algorithm: sha256WithRSAEncryption\n        Issuer: CN=kube1.k8s.mylabs.dev\n        Validity\n            Not Before: Nov 29 18:03:42 2021 GMT\n            Not After : Dec 10 04:04:12 2021 GMT\n        Subject: CN=*.vault-test-crt.kube1.k8s.mylabs.dev\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\n                Modulus:\n                    00:d9:4a:61:0e:41:67:ed:46:f6:32:8c:9b:b1:ab:\n...\n                    79:ab\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Key Encipherment, Key Agreement\n            X509v3 Extended Key Usage:\n                TLS Web Server Authentication, TLS Web Client Authentication\n            X509v3 Subject Key Identifier:\n                88:5A:17:7D:0D:D8:96:E9:B4:F1:9C:46:2D:A2:44:BE:2F:01:0B:B6\n            X509v3 Authority Key Identifier:\n                keyid:EC:BA:5D:62:E3:85:5E:42:DA:C4:AA:91:A0:9E:8A:0D:7D:27:22:B4\n\n            X509v3 Subject Alternative Name:\n                DNS:*.vault-test-crt.kube1.k8s.mylabs.dev, DNS:vault-test-crt.kube1.k8s.mylabs.dev\n    Signature Algorithm: sha256WithRSAEncryption\n         b4:87:d8:1a:bd:dd:d8:3e:05:92:70:b7:d8:2c:a2:48:82:b3:\n...\n         6e:cc:32:d7\nRSA key ok\nwriting RSA key\n")])])]),s("h2",{attrs:{id:"podinfo-with-vault-certificate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#podinfo-with-vault-certificate"}},[a._v("#")]),a._v(" podinfo with vault certificate")]),a._v(" "),s("p",[a._v("Install "),s("code",[a._v("podinfo")]),a._v(" "),s("a",{attrs:{href:"https://github.com/stefanprodan/podinfo/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),s("OutboundLink")],1),a._v("\nand modify the\n"),s("a",{attrs:{href:"https://github.com/stefanprodan/podinfo/blob/master/charts/podinfo/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm upgrade "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6.0")]),a._v(".0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" podinfo-vault "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - podinfo sp/podinfo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\nui:\n  message: "Vault Certificate"\nserviceMonitor:\n  enabled: true\ningress:\n  enabled: true\n  hosts:\n    - host: podinfo.vault-test-crt.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n    - secretName: podinfo-vault-certificate-tls\n      hosts:\n        - podinfo.vault-test-crt."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nEOF")]),a._v("\n")])])]),s("p",[a._v("Wait for the DNS to be resolvable and service accessible:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("dig")]),a._v(" +nocmd +noall +answer +ttlid a "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"podinfo.vault-test-crt.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("date")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n")])])]),s("p",[a._v("Check the certificate:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("openssl s_client "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-connect")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"podinfo.vault-test-crt.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v(':443"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/Server certificate/,/-----END CERTIFICATE-----/d"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CONNECTED(00000006)\n---\nCertificate chain\n 0 s:/O=Acme Co/CN=Kubernetes Ingress Controller Fake Certificate\n   i:/O=Acme Co/CN=Kubernetes Ingress Controller Fake Certificate\n---\nServer certificate\n-----BEGIN CERTIFICATE-----\nMIIDbzCCAlegAwIBAgIQSB8G7xX+h6Td7daLPJ+hMDANBgkqhkiG9w0BAQsFADBL\n...\nMA05y3W7LmkeK0ebK4fr50SLFQ==\n-----END CERTIFICATE-----\nsubject=/O=Acme Co/CN=Kubernetes Ingress Controller Fake Certificate\nissuer=/O=Acme Co/CN=Kubernetes Ingress Controller Fake Certificate\n---\nNo client certificate CA names sent\nServer Temp Key: ECDH, X25519, 253 bits\n---\nSSL handshake has read 1357 bytes and written 289 bytes\n---\nNew, TLSv1/SSLv3, Cipher is ECDHE-RSA-AES128-GCM-SHA256\nServer public key is 2048 bit\nSecure Renegotiation IS supported\nCompression: NONE\nExpansion: NONE\nNo ALPN negotiated\nSSL-Session:\n    Protocol  : TLSv1.2\n    Cipher    : ECDHE-RSA-AES128-GCM-SHA256\n    Session-ID: C53B8D0D70FE1C19FBDF7974A899C7328C42B499706F06F69B822D18426E3733\n    Session-ID-ctx:\n    Master-Key: 5xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3\n    Start Time: 1638209104\n    Timeout   : 7200 (sec)\n    Verify return code: 21 (unable to verify the first certificate)\n---\n")])])]),s("h2",{attrs:{id:"secrets-store-csi-driver"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#secrets-store-csi-driver"}},[a._v("#")]),a._v(" secrets-store-csi-driver")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.aws.amazon.com/secretsmanager/latest/userguide/integrating_csi_driver.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Integrating Secrets Manager secrets with Kubernetes Secrets Store CSI Driver"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://aws.amazon.com/blogs/security/how-to-use-aws-secrets-configuration-provider-with-kubernetes-secrets-store-csi-driver/",target:"_blank",rel:"noopener noreferrer"}},[a._v("How to use AWS Secrets & Configuration Provider with your Kubernetes Secrets\nStore CSI driver"),s("OutboundLink")],1)])]),a._v(" "),s("p",[a._v("Install "),s("code",[a._v("secrets-store-csi-driver")]),a._v(" "),s("a",{attrs:{href:"https://github.com/kubernetes-sigs/secrets-store-csi-driver/tree/master/charts/secrets-store-csi-driver",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),s("OutboundLink")],1),a._v("\nand modify the\n"),s("a",{attrs:{href:"https://github.com/kubernetes-sigs/secrets-store-csi-driver/blob/master/charts/secrets-store-csi-driver/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm repo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" --force-update secrets-store-csi-driver https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/master/charts\nhelm upgrade "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.2")]),a._v(".0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" kube-system "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - csi-secrets-store secrets-store-csi-driver/secrets-store-csi-driver "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\nsyncSecret:\n  enabled: true\nenableSecretRotation: true\nEOF")]),a._v("\n")])])]),s("p",[a._v("Install the AWS Provider:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" https://raw.githubusercontent.com/aws/secrets-store-csi-driver-provider-aws/main/deployment/aws-provider-installer.yaml\n")])])]),s("h2",{attrs:{id:"kuard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kuard"}},[a._v("#")]),a._v(" kuard")]),a._v(" "),s("p",[a._v("Create the SecretProviderClass which tells the AWS provider which secrets are\nto be mounted in the pod:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" - "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\napiVersion: secrets-store.csi.x-k8s.io/v1alpha1\nkind: SecretProviderClass\nmetadata:\n  name: kuard-deployment-aws-secrets\n  namespace: kuard\nspec:\n  provider: aws\n  parameters:\n    objects: |\n        - objectName: "'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('-MySecret"\n          objectType: "secretsmanager"\n          objectAlias: MySecret\n        - objectName: "'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('-MySecret2"\n          objectType: "secretsmanager"\n          objectAlias: MySecret2\n  secretObjects:\n  - secretName: mysecret\n    type: Opaque\n    data:\n    - objectName: MySecret\n      key: username\n  - secretName: mysecret2\n    type: Opaque\n    data:\n    - objectName: MySecret2\n      key: username\nEOF')]),a._v("\n")])])]),s("p",[a._v("Install "),s("a",{attrs:{href:"https://github.com/kubernetes-up-and-running/kuard",target:"_blank",rel:"noopener noreferrer"}},[a._v("kuard"),s("OutboundLink")],1),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" - "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\nkind: Service\napiVersion: v1\nmetadata:\n  name: kuard\n  namespace: kuard\n  labels:\n    app: kuard\nspec:\n  selector:\n    app: kuard\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: kuard-deployment\n  namespace: kuard\n  labels:\n    app: kuard\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: kuard\n  template:\n    metadata:\n      labels:\n        app: kuard\n    spec:\n      serviceAccountName: kuard\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - topologyKey: "kubernetes.io/hostname"\n            labelSelector:\n              matchLabels:\n                app: kuard\n      volumes:\n      - name: secrets-store-inline\n        csi:\n          driver: secrets-store.csi.k8s.io\n          readOnly: true\n          volumeAttributes:\n            secretProviderClass: "kuard-deployment-aws-secrets"\n      containers:\n      - name: kuard-deployment\n        image: gcr.io/kuar-demo/kuard-amd64:v0.10.0-green\n        resources:\n          requests:\n            cpu: 100m\n            memory: "64Mi"\n          limits:\n            cpu: 100m\n            memory: "64Mi"\n        ports:\n        - containerPort: 8080\n        volumeMounts:\n        - name: secrets-store-inline\n          mountPath: "/mnt/secrets-store"\n          readOnly: true\n        env:\n        - name: MYSECRET\n          valueFrom:\n            secretKeyRef:\n              name: mysecret\n              key: username\n        - name: MYSECRET2\n          valueFrom:\n            secretKeyRef:\n              name: mysecret2\n              key: username\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: kuard\n  namespace: kuard\n  annotations:\n    nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy.'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/auth\n    nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/start?rd=\\"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$scheme")]),a._v("://\\"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$host")]),a._v("\\"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$request_uri")]),a._v("\n  labels:\n    app: kuard\nspec:\n  rules:\n    - host: kuard."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      http:\n        paths:\n        - path: /\n          pathType: ImplementationSpecific\n          backend:\n            service:\n              name: kuard\n              port:\n                number: 8080\n  tls:\n    - hosts:\n        - kuard."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      secretName: ingress-cert-"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\nEOF")]),a._v("\n")])])]),s("p",[a._v("Go to these URLs and check see the credentials synced from AWS Secrets Manager:")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://kuard.kube1.k8s.mylabs.dev/-/env",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://kuard.kube1.k8s.mylabs.dev/-/env"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://kuard.kube1.k8s.mylabs.dev/fs/mnt/secrets-store/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://kuard.kube1.k8s.mylabs.dev/fs/mnt/secrets-store/"),s("OutboundLink")],1)])]),a._v(" "),s("p",[a._v("You should also see it in the "),s("code",[a._v("kuard")]),a._v(" secret:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wait")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" kuard "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("condition")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("available deployment kuard-deployment\nkubectl get secrets "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" kuard mysecret "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{{.data.username}}"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" base64 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" jq\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"password"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xxxxxx"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"username"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Administrator"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);