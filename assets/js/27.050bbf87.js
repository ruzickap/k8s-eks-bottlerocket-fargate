(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{314:function(a,e,s){"use strict";s.r(e);var t=s(8),r=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#authentication"}},[a._v("#")]),a._v(" Authentication")]),a._v(" "),e("h2",{attrs:{id:"keycloak"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keycloak"}},[a._v("#")]),a._v(" Keycloak")]),a._v(" "),e("p",[a._v("Install "),e("code",[a._v("keycloak")]),a._v(" "),e("a",{attrs:{href:"https://artifacthub.io/packages/helm/bitnami/keycloak",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/bitnami/charts/blob/master/bitnami/keycloak/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" --force-update bitnami https://charts.bitnami.com/bitnami\nhelm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.0")]),a._v(".6 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" keycloak --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - keycloak bitnami/keycloak "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\nclusterDomain: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nauth:\n  adminUser: admin\n  adminPassword: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n  managementUser: admin\n  managementPassword: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v('\nproxyAddressForwarding: true\n# https://stackoverflow.com/questions/51616770/keycloak-restricting-user-management-to-certain-groups-while-enabling-manage-us\nextraStartupArgs: "-Dkeycloak.profile.feature.admin_fine_grained_authz=enabled"\n# keycloakConfigCli:\n#   enabled: true\n#   # Workaround for bug: https://github.com/bitnami/charts/issues/6823\n#   image:\n#     repository: adorsys/keycloak-config-cli\n#     tag: latest-15.0.1\n#   configuration:\n#     myrealm.yaml: |\n#       realm: myrealm\n#       enabled: true\n#       displayName: My Realm\n#       rememberMe: true\n#       userManagedAccessAllowed: true\n#       smtpServer:\n#         from: myrealm-keycloak@'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n#         fromDisplayName: Keycloak\n#         host: mailhog.mailhog.svc.cluster.local\n#         port: 1025\n#       clients:\n#       # https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/oauth_provider/#keycloak-auth-provider\n#       - clientId: oauth2-proxy-keycloak."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n#         name: oauth2-proxy-keycloak."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('\n#         description: "OAuth2 Proxy for Keycloak"\n#         secret: '),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v('\n#         redirectUris:\n#         - "https://oauth2-proxy-keycloak.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/oauth2/callback"\n#         protocolMappers:\n#         - name: groupMapper\n#           protocol: openid-connect\n#           protocolMapper: oidc-group-membership-mapper\n#           config:\n#             userinfo.token.claim: "true"\n#             id.token.claim: "true"\n#             access.token.claim: "true"\n#             claim.name: groups\n#             full.path: "true"\n#       identityProviders:\n#       # https://ultimatesecurity.pro/post/okta-oidc/\n#       - alias: keycloak-oidc-okta\n#         displayName: "Okta"\n#         providerId: keycloak-oidc\n#         trustEmail: true\n#         config:\n#           clientId: '),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${OKTA_CLIENT_ID}")]),a._v("\n#           clientSecret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${OKTA_CLIENT_SECRET}")]),a._v('\n#           tokenUrl: "'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${OKTA_ISSUER}")]),a._v('/oauth2/default/v1/token"\n#           authorizationUrl: "'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${OKTA_ISSUER}")]),a._v('/oauth2/default/v1/authorize"\n#           defaultScope: "openid profile email"\n#           syncMode: IMPORT\n#       - alias: dex\n#         displayName: "Dex"\n#         providerId: keycloak-oidc\n#         trustEmail: true\n#         config:\n#           clientId: keycloak.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n#           clientSecret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n#           tokenUrl: https://dex."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/token\n#           authorizationUrl: https://dex."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/auth\n#           syncMode: IMPORT\n#       - alias: github\n#         displayName: "Github"\n#         providerId: github\n#         trustEmail: true\n#         config:\n#           clientId: '),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_GITHUB_ORG_OAUTH_KEYCLOAK_CLIENT_ID}")]),a._v("\n#           clientSecret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_GITHUB_ORG_OAUTH_KEYCLOAK_CLIENT_SECRET}")]),a._v("\n#       users:\n#       - username: myuser1\n#         email: myuser1@"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n#         enabled: true\n#         firstName: My Firstname 1\n#         lastName: My Lastname 1\n#         groups:\n#           - group-admins\n#         credentials:\n#         - type: password\n#           value: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n#       - username: myuser2\n#         email: myuser2@"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n#         enabled: true\n#         firstName: My Firstname 2\n#         lastName: My Lastname 2\n#         groups:\n#           - group-admins\n#         credentials:\n#         - type: password\n#           value: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n#       - username: myuser3\n#         email: myuser3@"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n#         enabled: true\n#         firstName: My Firstname 3\n#         lastName: My Lastname 3\n#         groups:\n#           - group-users\n#         credentials:\n#         - type: password\n#           value: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n#       - username: myuser4\n#         email: myuser4@"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n#         enabled: true\n#         firstName: My Firstname 4\n#         lastName: My Lastname 4\n#         groups:\n#           - group-users\n#           - group-test\n#         credentials:\n#         - type: password\n#           value: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n#       groups:\n#       - name: group-users\n#       - name: group-admins\n#       - name: group-test\nservice:\n  type: ClusterIP\ningress:\n  enabled: true\n  hostname: keycloak."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n  extraTls:\n  - hosts:\n      - keycloak."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n    secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\nnetworkPolicy:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\npostgresql:\n  persistence:\n    enabled: false\nEOF")]),a._v("\n")])])]),e("h2",{attrs:{id:"oauth2-proxy-keycloak"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oauth2-proxy-keycloak"}},[a._v("#")]),a._v(" oauth2-proxy - Keycloak")]),a._v(" "),e("p",[a._v("Install "),e("a",{attrs:{href:"https://github.com/oauth2-proxy/oauth2-proxy",target:"_blank",rel:"noopener noreferrer"}},[a._v("oauth2-proxy"),e("OutboundLink")],1),a._v(" to secure\nthe endpoints like ("),e("code",[a._v("prometheus.")]),a._v(", "),e("code",[a._v("alertmanager.")]),a._v(").")]),a._v(" "),e("p",[a._v("Install "),e("code",[a._v("oauth2-proxy")]),a._v(" "),e("a",{attrs:{href:"https://artifacthub.io/packages/helm/oauth2-proxy/oauth2-proxy",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/oauth2-proxy/manifests/blob/main/helm/oauth2-proxy/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" --force-update oauth2-proxy https://oauth2-proxy.github.io/manifests\nhelm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4.2")]),a._v(".0 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" oauth2-proxy-keycloak --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - oauth2-proxy oauth2-proxy/oauth2-proxy "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\nconfig:\n  clientID: oauth2-proxy-keycloak."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('\n  clientSecret: "'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v('"\n  cookieSecret: "'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("openssl rand "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-base64")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("32")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("head")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("32")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" base64"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"\n  configFile: |-\n    email_domains = [ "*" ]\n    upstreams = [ "file:///dev/null" ]\n    whitelist_domains = ".'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"\n    cookie_domains = ".'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"\n    provider = "keycloak"\n    login_url = "https://keycloak.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/auth/realms/myrealm/protocol/openid-connect/auth"\n    redeem_url = "https://keycloak.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/auth/realms/myrealm/protocol/openid-connect/token"\n    profile_url = "https://keycloak.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/auth/realms/myrealm/protocol/openid-connect/userinfo"\n    validate_url = "https://keycloak.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/auth/realms/myrealm/protocol/openid-connect/userinfo"\n    scope = "openid email profile"\n    ssl_insecure_skip_verify = "true"\n    insecure_oidc_skip_issuer_verification = "true"\ningress:\n  enabled: true\n  hosts:\n    - oauth2-proxy-keycloak.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n  tls:\n    - secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n      hosts:\n        - oauth2-proxy-keycloak."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nmetrics:\n  servicemonitor:\n    enabled: true\nEOF")]),a._v("\n")])])]),e("h2",{attrs:{id:"dex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dex"}},[a._v("#")]),a._v(" Dex")]),a._v(" "),e("p",[a._v("Install "),e("code",[a._v("dex")]),a._v(" "),e("a",{attrs:{href:"https://artifacthub.io/packages/helm/dex/dex",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/dexidp/helm-charts/blob/master/charts/dex/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" --force-update dex https://charts.dexidp.io\nhelm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.6")]),a._v(".0 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" dex --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - dex dex/dex "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\ningress:\n  enabled: true\n  annotations:\n    nginx.ingress.kubernetes.io/ssl-redirect: "false"\n  hosts:\n    - host: dex.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n    - secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n      hosts:\n        - dex."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nconfig:\n  issuer: https://dex."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n  storage:\n    type: kubernetes\n    config:\n      inCluster: true\n  oauth2:\n    skipApprovalScreen: true\n  connectors:\n    - type: github\n      id: github\n      name: GitHub\n      config:\n        clientID: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_GITHUB_ORG_OAUTH_DEX_CLIENT_ID}")]),a._v("\n        clientSecret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_GITHUB_ORG_OAUTH_DEX_CLIENT_SECRET}")]),a._v("\n        redirectURI: https://dex."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/callback\n        orgs:\n          - name: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_GITHUB_ORG_NAME}")]),a._v("\n    - type: oidc\n      id: okta\n      name: Okta\n      config:\n        issuer: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${OKTA_ISSUER}")]),a._v("\n        clientID: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${OKTA_CLIENT_ID}")]),a._v("\n        clientSecret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${OKTA_CLIENT_SECRET}")]),a._v("\n        redirectURI: https://dex."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/callback\n        scopes:\n          - openid\n          - profile\n          - email\n        getUserInfo: true\n  staticClients:\n    - id: argocd."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      redirectURIs:\n        - https://argocd."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/auth/callback\n      name: ArgoCD\n      secret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n    - id: gangway."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      redirectURIs:\n        - https://gangway."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/callback\n      name: Gangway\n      secret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n    - id: harbor."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      redirectURIs:\n        - https://harbor."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/c/oidc/callback\n      name: Harbor\n      secret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n    - id: kiali."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      redirectURIs:\n        - https://kiali."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      name: Kiali\n      secret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n    - id: keycloak."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      redirectURIs:\n        - https://keycloak."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/auth/realms/myrealm/broker/dex/endpoint\n      name: Keycloak\n      secret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n    - id: oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      redirectURIs:\n        - https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/callback\n      name: OAuth2 Proxy\n      secret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n    - id: vault."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      redirectURIs:\n        - https://vault."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/ui/vault/auth/oidc/oidc/callback\n        - http://localhost:8250/oidc/callback\n      name: Vault\n      secret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n  enablePasswordDB: false\nEOF")]),a._v("\n")])])]),e("h2",{attrs:{id:"oauth2-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oauth2-proxy"}},[a._v("#")]),a._v(" oauth2-proxy")]),a._v(" "),e("p",[a._v("Install "),e("a",{attrs:{href:"https://github.com/oauth2-proxy/oauth2-proxy",target:"_blank",rel:"noopener noreferrer"}},[a._v("oauth2-proxy"),e("OutboundLink")],1),a._v(" to secure\nthe endpoints like ("),e("code",[a._v("prometheus.")]),a._v(", "),e("code",[a._v("alertmanager.")]),a._v(").")]),a._v(" "),e("p",[a._v("Install "),e("code",[a._v("oauth2-proxy")]),a._v(" "),e("a",{attrs:{href:"https://artifacthub.io/packages/helm/oauth2-proxy/oauth2-proxy",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/oauth2-proxy/manifests/blob/main/helm/oauth2-proxy/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4.2")]),a._v(".0 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" oauth2-proxy --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - oauth2-proxy oauth2-proxy/oauth2-proxy "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\nconfig:\n  clientID: oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('\n  clientSecret: "'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v('"\n  cookieSecret: "'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("openssl rand "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-base64")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("32")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("head")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("32")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" base64"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"\n  configFile: |-\n    email_domains = [ "*" ]\n    upstreams = [ "file:///dev/null" ]\n    whitelist_domains = ".'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"\n    cookie_domains = ".'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"\n    provider = "oidc"\n    oidc_issuer_url = "https://dex.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"\n    ssl_insecure_skip_verify = "true"\n    insecure_oidc_skip_issuer_verification = "true"\ningress:\n  enabled: true\n  hosts:\n    - oauth2-proxy.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n  tls:\n    - secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n      hosts:\n        - oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nmetrics:\n  servicemonitor:\n    enabled: true\nEOF")]),a._v("\n")])])]),e("h2",{attrs:{id:"gangway"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gangway"}},[a._v("#")]),a._v(" Gangway")]),a._v(" "),e("p",[a._v("Install gangway:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" --force-update stable https://charts.helm.sh/stable\nhelm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.4")]),a._v(".5 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" gangway --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - gangway stable/gangway "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\n# https://github.com/helm/charts/blob/master/stable/gangway/values.yaml\ntrustedCACert: |\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_CERTIFICATE}")]),a._v('"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s/^/  /"')]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\ngangway:\n  clusterName: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n  authorizeURL: https://dex."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/auth\n  tokenURL: https://dex."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/token\n  audience: https://dex."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/userinfo\n  redirectURL: https://gangway."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/callback\n  clientID: gangway."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n  clientSecret: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_PASSWORD}")]),a._v("\n  apiServerURL: https://kube-oidc-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\ningress:\n  enabled: true\n  annotations:\n    nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/auth\n    nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("/oauth2/start?rd=\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$scheme")]),a._v("://\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$host")]),a._v("\\"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$request_uri")]),a._v("\n  hosts:\n    - gangway."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n  tls:\n    - secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n      hosts:\n        - gangway."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nEOF")]),a._v("\n")])])]),e("h2",{attrs:{id:"kube-oidc-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kube-oidc-proxy"}},[a._v("#")]),a._v(" kube-oidc-proxy")]),a._v(" "),e("p",[a._v("The "),e("code",[a._v("kube-oidc-proxy")]),a._v(" accepting connections only via HTTPS. It's necessary to\nconfigure ingress to communicate with the backend over HTTPS.")]),a._v(" "),e("p",[a._v("Install kube-oidc-proxy:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/kube-oidc-proxy"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--quiet")]),a._v(" https://github.com/jetstack/kube-oidc-proxy.git "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/kube-oidc-proxy"')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/kube-oidc-proxy"')]),a._v(" checkout "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--quiet")]),a._v(" v0.3.0\n\nhelm upgrade "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" kube-oidc-proxy --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - kube-oidc-proxy "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tmp/'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('/kube-oidc-proxy/deploy/charts/kube-oidc-proxy"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\n# https://github.com/jetstack/kube-oidc-proxy/blob/master/deploy/charts/kube-oidc-proxy/values.yaml\noidc:\n  clientId: gangway."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n  issuerUrl: https://dex."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n  usernameClaim: email\n  caPEM: |\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_CERTIFICATE}")]),a._v('"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s/^/    /"')]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\ningress:\n  annotations:\n    nginx.ingress.kubernetes.io/backend-protocol: HTTPS\n  enabled: true\n  hosts:\n    - host: kube-oidc-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n      paths:\n        - /\n  tls:\n   - secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n     hosts:\n       - kube-oidc-proxy."),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nEOF")]),a._v("\n")])])]),e("p",[a._v("If you get the credentials form the "),e("a",{attrs:{href:"https://gangway.kube1.k8s.mylabs.dev",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://gangway.kube1.k8s.mylabs.dev"),e("OutboundLink")],1),a._v("\nyou will have the access to the cluster, but no rights there.")]),a._v(" "),e("p",[a._v("Add access rights to the user:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" - "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  namespace: kube-prometheus-stack\n  name: secret-reader\nrules:\n- apiGroups: [""]\n  resources: ["secrets"]\n  verbs: ["get", "watch", "list"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: read-secrets\n  namespace: kube-prometheus-stack\nsubjects:\n- kind: User\n  name: '),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_EMAIL}")]),a._v('\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: secret-reader\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: pods-reader\nrules:\n- apiGroups: [""]\n  resources: ["pods"]\n  verbs: ["get", "watch", "list"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: read-pods\nsubjects:\n- kind: User\n  name: '),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_EMAIL}")]),a._v("\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole\n  name: pods-reader\n  apiGroup: rbac.authorization.k8s.io\nEOF")]),a._v("\n")])])]),e("p",[a._v("The user should be able to read the secrets in "),e("code",[a._v("kube-prometheus-stack")]),a._v("\nnamespace:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("kubectl describe secrets --insecure-skip-tls-verify "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" kube-prometheus-stack "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ingress-cert-'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v('"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# DevSkim: ignore DS126188")]),a._v("\n")])])]),e("p",[a._v("Output:")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('Name:         ingress-cert-staging\nNamespace:    kube-prometheus-stack\nLabels:       kubed.appscode.com/origin.cluster=kube1.k8s.mylabs.dev\n              kubed.appscode.com/origin.name=ingress-cert-staging\n              kubed.appscode.com/origin.namespace=cert-manager\nAnnotations:  cert-manager.io/alt-names: *.kube1.k8s.mylabs.dev,kube1.k8s.mylabs.dev\n              cert-manager.io/certificate-name: ingress-cert-staging\n              cert-manager.io/common-name: *.kube1.k8s.mylabs.dev\n              cert-manager.io/ip-sans:\n              cert-manager.io/issuer-group:\n              cert-manager.io/issuer-kind: ClusterIssuer\n              cert-manager.io/issuer-name: letsencrypt-staging-dns\n              cert-manager.io/uri-sans:\n              kubed.appscode.com/origin:\n                {"namespace":"cert-manager","name":"ingress-cert-staging","uid":"f1ed062c-23d9-4cf7-ad51-cfafd8a3b788","resourceVersion":"5296"}\n\nType:  kubernetes.io/tls\n\nData\n====\ntls.crt:  3586 bytes\ntls.key:  1679 bytes\n')])])]),e("p",[a._v("But it's not allowed to delete the secrets for the user:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("kubectl delete secrets --insecure-skip-tls-verify "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" kube-prometheus-stack "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ingress-cert-'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v('"')]),a._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# DevSkim: ignore DS126188")]),a._v("\n")])])]),e("p",[a._v("Output:")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('Error from server (Forbidden): secrets "ingress-cert-staging" is forbidden: User "petr.ruzicka@gmail.com" cannot delete resource "secrets" in API group "" in the namespace "kube-prometheus-stack"\n')])])]),e("p",[a._v("The user can not read secrets outside the "),e("code",[a._v("kube-prometheus-stack")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("kubectl get secrets --insecure-skip-tls-verify "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" kube-system                                                          "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# DevSkim: ignore DS126188")]),a._v("\n")])])]),e("p",[a._v("Output:")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('Error from server (Forbidden): secrets is forbidden: User "petr.ruzicka@gmail.com" cannot list resource "secrets" in API group "" in the namespace "kube-system"\n')])])]),e("p",[a._v('You can see the pods "everywhere":')]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("kubectl get pods --insecure-skip-tls-verify "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" kube-system                                                             "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# DevSkim: ignore DS126188")]),a._v("\n")])])]),e("p",[a._v("Output:")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("NAME                                                         READY   STATUS    RESTARTS   AGE\naws-for-fluent-bit-5hxlt                                     1/1     Running   0          32m\naws-for-fluent-bit-dmvzq                                     1/1     Running   0          32m\naws-node-ggfft                                               1/1     Running   0          32m\naws-node-lhlvf                                               1/1     Running   0          32m\ncluster-autoscaler-aws-cluster-autoscaler-7f878bccc8-s279k   1/1     Running   0          25m\ncoredns-59b69b4849-6v487                                     1/1     Running   0          46m\ncoredns-59b69b4849-tw2dg                                     1/1     Running   0          46m\nebs-csi-controller-86785d75db-7brbr                          5/5     Running   0          31m\nebs-csi-controller-86785d75db-gn4ll                          5/5     Running   0          31m\nebs-csi-node-6h9zv                                           3/3     Running   0          31m\nebs-csi-node-r5rj7                                           3/3     Running   0          31m\nkube-proxy-m6dm8                                             1/1     Running   0          32m\nkube-proxy-pdmv9                                             1/1     Running   0          32m\n")])])]),e("p",[a._v("But you can not delete them:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("kubectl delete pods --insecure-skip-tls-verify "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" kube-oidc-proxy "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--all")]),a._v("                                                "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# DevSkim: ignore DS126188")]),a._v("\n")])])]),e("p",[a._v("Output:")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('Error from server (Forbidden): pods "kube-oidc-proxy-74bf5679fd-jhdmr" is forbidden: User "petr.ruzicka@gmail.com" cannot delete resource "pods" in API group "" in the namespace "kube-oidc-proxy"\n')])])])])}),[],!1,null,null,null);e.default=r.exports}}]);